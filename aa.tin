#ACTION {^You start following %1.$}
{
	#variable {groupLeader} {%1}
}
{(9)}

#ACTION {^You stop following %1.$}
{
	exp | prefix silent_;
	#unvariable {groupLeader};
	#unvariable {groupExperience}
}
{(9)}

#ACTION {%1 has %2 of %3 hitpoints.$}
{
	#if {"$autoheal" == "true"}
	{
		#if {%2 <= %3 / 3}
		{
			#if {"%1" == "You"}
			{
				h
			};
			#else
			{
				h %1
			}
		}
	}
}
{1}

#ACTION {%1 resists the spell.$}
{
	#unvariable {lastSoulSteal}
}
{1}

#ACTION {^A tall prison of jagged bone teeth cracks and shatters as you break free!$}
{
	#if {&{position}}
	{
		stand
	}
}
{1}

#ACTION {^PANIC!!  You couldn't escape!$}
{
	run
}
{1}

#ACTION {^You are drowning!$}
{
	#if {"$waterBreathing" == "true"}
	{
		c water breathing
	}
}
{1}

#ACTION {^You are in an awful condition!$}
{
	#if {"$autorecall" == "true"}
	{
		#if {$currentMana >= 15 && "$wordOfRecall" == "true"}
		{
			.
		};
		#else
		{
			/
		}
	}
}
{1}

#ACTION {^You are rescued from certain death by %1!}
{
	a
}
{1}

#ACTION {^You barely remember anything about that spell, but attempt to cast it anyway.$}
{
	#unvariable {lastSpell}
}
{1}

#ACTION {^You fail the rescue!}
{
	\!res
}
{1}

#ACTION {^You have lost %1 experience points so far due to deaths.$}
{
	#variable {lostExp} {%1}
}
{1}

#ACTION {^You struggle desparately for air to breathe!$}
{
	#if {"$waterBreathing" == "true"}
	{
		c water breathing
	}
}
{1}

#ACTION {^You struggle for air but find none!$}
{
	#if {"$waterBreathing" == "true"}
	{
		c water breathing
	}
}
{1}

#ACTION {^You fail to {channel|cast} the spel%1.$}
{
	#if {!&{recast}}
	{
		#if {"$autorecast" == "true"}
		{
			#variable {recast} {$lastSpell;}
		}
	};
	#else
	{
		#if {"$autorecast" == "ture"}
		{
			#variable {recast} {$recast $lastSpell;}
		}
	};
	#if {&{lastSpell} && "$autorecast" == "true"}
	{
		recast
	}
}
{2}

#ACTION {^A clay man cracks and crumbles, becoming a pile of dust and dirt.$}
{
	play clay-man-death
}
{3}

#ACTION {^A {clay man|bone guardian|flesh beast|metal construct|wood woad} stops following you.$}
{
	#if {"$autoclay" == "true"}
	{
		#unvariable {autoclay};
		#delay {0.2} {c clay man};
		#delay {8} {#variable {autoclay} {true}}
	};
	#if {"$autowoad" == "true"}
	{
		get $woadMaterial $container;
		drop $woadMaterial;
		#unvariable {autowoad};
		#delay {0.2} {c wood $woadMaterial};
		#delay {8} {#variable {autowoad} {true}}
	};
	#if {"$autobone" == "true"}
	{
		get $boneMaterial $container;
		drop $boneMaterial;
		#unvariable {autobone};
		#delay {0.2} {c bone guardian $boneMaterial};
		#delay {8} {#variable {autobone} {true}}
	};
	#if {"$autofleshbeast" == "true"}
	{
		#variable {makeNewFleshBeast} {true}
	};
	#if {"$autometal" == "true"}
	{
		get $metalMaterial $container;
		drop $metalMaterial;
		#unvariable {autometal};
		#delay {0.2} {c metal construct $metalMaterial};
		#delay {8} {#variable {autometal} {true}}
	}
}
{4}

#ACTION {%1 begins trying to pick %2...$}
{
	#if {"%1" == "$groupLeader" && "$pickLocks" == "true"}
	{
		#regexp {%2} {{doors|door|gates|gate|portcullis|trapdoor}} {pick &1};
		#else
		{
			#regexp {%2} {{.*} {.*}} {pick &2};
			#else
			{
				pick %2
			}
		}
	}
}
{5}

#ACTION {%1is mortally wounded, and will die soon if not aided.$}
{
	#if {"$soulsteal" == "true"}
	{
		#if {"$lastSoulSteal" != "%1"}
		{
			c soulsteal
		};
		#variable {lastSoulSteal} {%1}
	}
}
{5}

#ACTION {^ %s  area refresh%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {areaRefresh} {true}
}
{5}

#ACTION {^ %s  armor%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {armor} {true}
}
{5}

#ACTION {^ %s  bash  %s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {bash} {true}
}
{5}

#ACTION {^ %s  bless%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {bless} {true}
}
{5}

#ACTION {^ %s  blood sacrifice%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {bloodSacrifice} {true}
}
{5}

#ACTION {^ %s  bloodmist%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {bloodmist} {true}
}
{5}

#ACTION {^ %s  bone blade%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {boneBlade} {true}
}
{5}

#ACTION {^ %s  bone guardian%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {boneGuardian} {true}
}
{5}

#ACTION {^ %s  bone shield%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {boneShield} {true}
}
{5}

#ACTION {^ %s  breath of life%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {healSpell} {breath of life}
}
{5}

#ACTION {^ %s  burning hands%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {burningHands} {true}
}
{5}

#ACTION {^ %s  cleave%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {cleave} {true}
}
{5}

#ACTION {^ %s  cloak of darkness%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {cloakOfDarkness} {true}
}
{5}

#ACTION {^ %s  consume%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {consume} {true};
	#macro {\eOS} {control all consume corpse}
}
{5}

#ACTION {^ %s  corpsecutter%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {corpsecutter} {true}
}
{5}

#ACTION {^ %s  cry of victory %s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {cryOfVictory} {true}
}
{5}

#ACTION {^ %s  cure light wounds%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {healSpell} {cure light wounds}
}
{5}

#ACTION {^ %s  cure serious wounds%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {healSpell} {cure serious wounds}
}
{5}

#ACTION {^ %s  detect invisibility%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {detectInvisibility} {true}
}
{5}

#ACTION {^ %s  dexterity%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {dexterity} {true}
}
{5}

#ACTION {^ %s  disarm%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {disarm} {true}
}
{5}

#ACTION {^ %s  displacement%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {displacement} {true}
}
{5}

#ACTION {^ %s  dying breath%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {dyingBreath} {true}
}
{5}

#ACTION {^ %s  faerie fire%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {faerieFire} {true}
}
{5}

#ACTION {^ %s  faith shield%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {faithShield} {true}
}
{5}

#ACTION {^ %s  feint%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {feint} {true}
}
{5}

#ACTION {^ %s  fireball%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {fireball} {true}
}
{5}

#ACTION {^ %s  firefield%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {firefield} {true}
}
{5}

#ACTION {^ %s  fly  %s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {fly} {true}
}
{5}

#ACTION {^ %s  foulblood%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {foulBlood} {true}
}
{5}

#ACTION {^ %s  group recall%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {groupRecall} {true};
	#alias {,} {c group recall} {1}
}
{5}

#ACTION {^ %s  heal  %s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {healSpell} {heal}
}
{5}

#ACTION {^ %s  hide%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {hide} {true}
}
{5}

#ACTION {^ %s  icebolt%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {icebolt} {true}
}
{5}

#ACTION {^ %s  infravision%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {infravision} {true}
}
{5}

#ACTION {^ %s  jab%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {jab} {true}
}
{5}

#ACTION {^ %s  knife throwing%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {knifeThrowing} {true};
	#alias {^{t|th|thr|thro|throw}$}{throw $throwWeapon;get $throwWeapon}
}
{5}

#ACTION {^ %s  leap attack%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {leapAttack} {true}
}
{5}

#ACTION {^ %s  lightning bolt%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {lightningBolt} {true}
}
{5}

#ACTION {^ %s  lunge%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {lunge} {true}
}
{5}

#ACTION {^ %s  palm%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {palm} {true}
}
{5}

#ACTION {^ %s  pick locks%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {pickLocks} {true}
}
{5}

#ACTION {^ %s  preservation%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {preservation} {true};
	#alias {{pres|prese|preser|preserv|preserve}} {c preservation corpse} {9}
}
{5}

#ACTION {^ %s  protection from evil%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {protectionFromEvil} {true}
}
{5}

#ACTION {^ %s  rancid flesh%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {rancidFlesh} {true}
}
{5}

#ACTION {^ %s  refresh%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {refresh} {true}
}
{5}

#ACTION {^ %s  riposte%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {riposte} {true}
}
{5}

#ACTION {^ %s  sacred touch%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {sacredTouch} {true}
}
{5}

#ACTION {^ %s  second wind%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {secondWind} {true}
}
{5}

#ACTION {^ %s  sense life%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {senseLife} {true}
}
{5}

#ACTION {^ %s  shadow fiend%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {shadowFiend} {true};
	#alias {^f$} {#if {&{position}} {getup};get deep $container;stop;summon demon fiend soulstone;a;#if {&{position}} {$position}} {1}
}
{5}

#ACTION {^ %s  shield%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {shield} {true}
}
{5}

#ACTION {^ %s  shocking grasp%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {shockingGrasp} {true}
}
{5}

#ACTION {^ %s  sickening touch%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {sickeningTouch} {true}
}
{5}

#ACTION {^ %s  soulbind%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {soulbind} {true}
}
{5}

#ACTION {^ %s  soulsteal%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {soulsteal} {true}
}
{5}

#ACTION {^ %s  stealthy movement%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {stealthyMovement} {true};
	#alias {^stealth$} {#variable {stealth} {true};#showme {you will now automatically use stealthy movement when walking with quick navigation keys.}};
	#alias {^nostealth$} {#unvariable {stealth};#showme {you will no longer automatically use stealthy movement when walking with quick navigation keys.}}
}
{5}

#ACTION {^ %s  stomp%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {stomp} {true}
}
{5}

#ACTION {^ %s  stone skin%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {stoneSkin} {true}
}
{5}

#ACTION {^ %s  strength%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {strength} {true}
}
{5}

#ACTION {^ %s  taunt%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {taunt} {true}
}
{5}

#ACTION {^ %s  trip%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {trip} {true}
}
{5}

#ACTION {^ %s  water breathing%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {waterBreathing} {true}
}
{5}

#ACTION {^ %s  whirlwind%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {whirlwind} {true}
}
{5}

#ACTION {^ %s  wood woad%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {woodWoad} {true}
}
{5}

#ACTION {^ %s  word of recall%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {wordOfRecall} {true};
	#alias {.} {c word of recall} {1}
}
{5}

#ACTION {^ %sidentify%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {identify} {true}
}
{5}

#ACTION {^A flesh beast starts following you.$}
{
	#if {&{makeNewFleshBeast}}
	{
		#unvariable {makeNewFleshBeast}
	}
}
{5}

#ACTION {^A ghoul bites %1 with diseased, razor sharp teeth!$}
{
	play ghoul-attack
}
{5}

#ACTION {^A ghoul jumps at %1 clawing and biting!$}
{
	play ghoul-attack
}
{5}

#ACTION {^A ghoul rips and tears into %1 with filthy, diseased claws!$}
{
	play ghoul-attack
}
{5}

#ACTION {^A twisted bone shield fractures, splits, and abruptly crumbles to dust! (worn by you)$}
{
	#if {"$boneShield" == "true" && "$autorecast" == "true"}
	{
		c bone shield
	}
}
{5}

#ACTION {^A zombie gnaws hungrily on %1 with filthy, rotten teeth.$}
{
	play ghoul-attack
}
{5}

#ACTION {^The clay man crumbles back into the dust and dirt from whence it came.$}
{
	play clay-man-death
}
{5}

#ACTION {^The light above the wizard's shop flickers for an instant, looks like it needs maintenance.$}
{
	play wizard-shop-light
}
{5}

#ACTION {^The pumpkin cannon operator says, 'the record distance is %1 feet, held by %2'$}
{
	#if {&{pumpkinCannonFeet} && &{pumpkinCannonLocation}}
	{
		#if {!&{lastPumpkinCannonFeet} || $pumpkinCannonFeet >= $lastPumpkinCannonFeet}
		{
			tweet $name shot a pumpkin $pumpkinCannonFeet feet $pumpkinCannonLocation! The current record holder is %2 with %1 feet. #AlterAeon;
			fbpost $name shot a pumpkin a distance of $pumpkinCannonFeet feet $pumpkinCannonLocation! The current record holder is %2 with a distance of %1 feet.;
			#math {lastPumpkinCannonFeet} {$pumpkinCannonFeet * 1}
		};
		#unvariable {pumpkinCannonFeet};
		#unvariable {pumpkinCannonLocation}
	}
}
{5}

#ACTION {^You are %1, and currently %2 tall.$}
{
	#variable {sex} {%1}
}
{5}

#ACTION {^You are now a group member.$}
{
	#variable {groupExperience} {0}
}
{5}

#ACTION {^You can't concentrate enough!$}
{
	#if {"$autorecast" == "true"}
	{
		#if {!&{combat}}
		{
			#variable {combat} {$lastSpell}
		};
		#else
		{
			#variable {combat} {$combat $lastSpell}
		}
	}
}
{5}

#ACTION {^You can't seem to wake up!$}
{
	#unvariable {lastSpell}
}
{5}

#ACTION {^You do your best to explain to %1 that it was an honest mistake.$}
{
	#script {i} {echo "%1" | rev | cut -d " " -f 1 | rev};
	#delay {0.1} {#script {echo "talk ${i[1]} $(shuf -n 1 -e 'honest! I was only trying to tickle your balls!' 'I just wanted to scratch and sniff!')"}}
}
{5}

#ACTION {^You do your best to explain to %1 that you didn't do it.$}
{
	#script {i} {echo "%1" | rev | cut -d " " -f 1 | rev};
	#delay {0.1} {#script {echo "talk ${i[1]} $(shuf -n 1 -e 'honest! I was only trying to tickle your balls!' 'I just wanted to scratch and sniff!')"}}
}
{5}

#ACTION {^You enter a huge portal.$}
{
	play portal
}
{5}

#ACTION {^You fail the rescue!$}
{
	\!res
}
{5}

#ACTION {^You find yourself too weak to use %1.$}
{
	#variable {rewield} {true};
	eq | grep wielded | prefix silent_
}
{5}

#ACTION {^You have achieved the rank of '%1' in %2!$}
{
	tweet $name has achieved the rank of '%1' in %2!;
	fbpost $name has achieved the rank of '%1' in %2!
}
{5}

#ACTION {^You have been removed from the group.$}
{
	groupexp;
	#unvariable {groupexperience}
}
{5}

#ACTION {^You have {quite a few|big nasty} {wounds and scratches|wounds}.$}
{
	#if {"$autoheal" == "true"}
	{
		h
	}
}
{5}

#ACTION {^You hear the loud -clang- *CLANG* of a hammer on anvil to the north.$}
{
	play hammer-on-anvil
}
{5}

#ACTION {^You spend one practice to learn %1 (%2 percent gained).$}
{
	spell %1;
	skill %1
}
{5}

#ACTION {^You turn %1 years old today!$}
{
	tweet $name turned %1 years old today! Happy birthday! #AlterAeon;
	fbpost $name turned %1 years old today! Happy birthday!
}
{5}

#ACTION {^You weep as you think of the %1 experience that you lost.$}
{
	#math {lostExp} {$lostExp + %1};
	#if {&{groupExperience}}
	{
		#math {groupExperience} {$groupExperience - %1}
	};
	tweet $name was defeated in combat and lost %1 exp for a total loss of $lostExp experience points. #AlterAeon;
	fbpost $name was defeated in combat and lost %1 exp for a total loss of $lostExp experience points.;
	play death;
	#line {gag};
	experience lost | grep -i you have lost
}
{5}

#ACTION {^[event] The pumpkin cannon operator: %1 shot a pumpkin a distance of %2 feet %3!$}
{
	#if {"%1" == "%i$name"}
	{
		#variable {pumpkinCannonFeet} {%2};
		#variable {pumpkinCannonLocation} {%3}
	}
}
{5}

#ACTION {^kxwt_prompt %1 %2 %3 %4 %5 %6}
{
	#variable {currentHp} {%1};
	#variable {maxHp} {%2};
	#variable {currentMana} {%3};
	#variable {maxMana} {%4};
	#variable {currentMv} {%5};
	#variable {maxMv} {%6};
	#if {$currentHp >= $maxHp - 5}
	{
		#variable {lastHpAlert} {}
	};
	#if {$currentHp <= $maxHp * 0.75 && $currentHp > $maxHp * 0.50 && "$lastHpAlert" != "qf"}
	{
		#variable {lastHpAlert} {qf};
		#if {!&{volume} || $volume == 0}
		{
			#system {play -qn -V0 synth tri D5 tri F5 tri G#5 tri A5 tri C6 remix - fade 0 5.5 5 &> /dev/null &}
		};
		#else
		{
			#system {play -qn -V0 synth tri D5 tri F5 tri G#5 tri A5 tri C6 remix - fade 0 5.5 5 gain $volume &> /dev/null &}
		}
	};
	#elseif {$currentHp <= $maxHp * 0.50 && $currentHp > $maxHp * 0.25 && "$lastHpAlert" != "bn"}
	{
		#variable {lastHpAlert} {bn};
		#if {!&{volume} || $volume == 0}
		{
			#system {play -qn -V0 synth tri C#3 tri E3 tri A3 remix - fade 0 5.5 5 &> /dev/null &}
		};
		#else
		{
			#system {play -qn -V0 synth tri C#3 tri E3 tri A3 remix - fade 0 5.5 5 gain $volume &> /dev/null &}
		}
	};
	#elseif {$currentHp <= $maxHp * 0.25 && $currentHp > $maxHp * 0.10 && "$lastHpAlert" != "ph"}
	{
		#variable {lastHpAlert} {ph};
		#if {!&{volume} || $volume == 0}
		{
			#system {play -qn -V0 synth sq C#5 sq D#5 sq F#5 sq A5 sq C#6 remix - fade 0 5.5 5 &> /dev/null &}
		};
		#else
		{
			#system {play -qn -V0 synth sq C#5 sq D#5 sq F#5 sq A5 sq C#6 remix - fade 0 5.5 5 gain $volume &> /dev/null &}
		}
	};
	#elseif {$currentHp <= $maxHp * 0.10 && "$lastHpAlert" != "awful"}
	{
		#variable {lastHpAlert} {awful};
		#if {!&{volume} || $volume == 0}
		{
			#system {play -qn -V0 synth sq D#3 sq B3 sq C#4 sq F4 sq A4 remix - fade 0 5.5 5 &> /dev/null &}
		};
		#else
		{
			#system {play -qn -V0 synth sq D#3 sq B3 sq C#4 sq F4 sq A4 remix - fade 0 5.5 5 gain $volume &> /dev/null &}
		}
	};
	#if {%1 == %2 && %3 >= %4 - 3 && %5 == %6 && "$regenAlert" != "true"}
	{
		#if {&{position}}
		{
			play regen-complete
		};
		#variable {regenAlert} {true}
	};
	#if {%1 < %2 - 10 || %3 < %4 - 10 || %5 < %6 - 10}
	{
		#unvariable {regenAlert}
	};
	#if {"$autorefresh" == "true" && $currentMv < $maxMv / 5}
	{
		#if {"$areaRefresh" == "true"}
		{
			#if {$currentMana >= 28}
			{
				c area
			}
		};
		#else
		{
			#if {"$refresh" == "true"}
			{
				#if {$currentMana >= 15}
				{
					c refresh
				}
			}
		}
	};
	#if {"$secondWind" == "true" && !&{exhausted} && $currentMv < $maxMv / 10}
	{
		second wind;
		#variable {exhausted} {true}
	}
}
{5}

#ACTION {^silent_Necromancer remaining: %1/%2}
{
	#showme {You have %1 of %2 control points remaining.}
}
{5}

#ACTION {^silent_You must have an empty liquid container to brew anything in.$}
{
	empty $brewContainer | prefix silent_;
	brew p i | prefix silent_
}
{5}

#ACTION {^silent_Your brew%*}
{
	#if {"$autobrew" == "true"}
	{
		empty $brewContainer | prefix silent_
	}
}
{5}

#ACTION {^silent_wielded     - $}
{
	#unvariable {weapon}
}
{5}

#ACTION {^silent_Your levels are:  Ma %1  Cl %2  Th %3  Wa %4  Nc %5}
{
	#variable {mageLevel} {%1};
	#variable {clericLevel} {%2};
	#variable {thiefLevel} {%3};
	#variable {warriorLevel} {%4};
	#variable {necromancerLevel} {%5}
}
{7}

#ACTION {%1 {reels|reel} in %2 line and {recasts|recast} it.$}
{
	play fishing-cast
}
{8}

#ACTION {^The air smells cleaner, and you realize your rancid flesh spell has expired.$}
{
	#if {"$rancidFlesh" == "true" && "$autorecast" == "true"}
	{
		c rancid flesh
	}
}
{8}

#ACTION {^Yo%1miss%2{tonberry|moogle}.$}
{
	play ff-miss
}
{8}

#ACTION {^You %1, '%2'$}
{
	#if {"%1" != "yell"}
	{
		#switch {"%1"}
		{
			#case {"auction"}
			{
				#if {!&{volume} || $volume == 0}
				{
					#system {play -qn -V0 synth tri C4 tri F3 tri C3 tri F2 delay 0 0 .2 .2 remix - fade 0 1.5 0.7 phaser &> /dev/null &}
				};
				#else
				{
					#system {play -qn -V0 synth tri C4 tri F3 tri C3 tri F2 delay 0 0 .2 .2 remix - fade 0 1.5 0.7 phaser gain $volume &> /dev/null &}
				}
			};
			#case {"music"}
			{
				#if {!&{volume} || $volume == 0}
				{
					#system {play -qn -V0 synth pl E4 pl C4 pl A3 pl E3 pl A2 delay 0 .05 .1 .15 .2 remix - fade 0 0.5 .1 flanger norm -1 vol 0.2 &> /dev/null &}
				};
				#else
				{
					#system {play -qn -V0 synth pl E4 pl C4 pl A3 pl E3 pl A2 delay 0 .05 .1 .15 .2 remix - fade 0 0.5 .1 flanger norm -1 vol 0.2 gain $volume &> /dev/null &}
				}
			};
			#case {"tell the clan"}
			{
				#if {!&{volume} || $volume == 0}
				{
					#system {play -qn -V0 synth sin D4 sin G3 sin D3 sin G2 delay 0 0 .2 .2 remix - fade 0 1.5 0.7 phaser &> /dev/null &}
				};
				#else
				{
					#system {play -qn -V0 synth sin D4 sin G3 sin D3 sin G2 delay 0 0 .2 .2 remix - fade 0 1.5 0.7 phaser gain $volume &> /dev/null &}
				}
			};
			#case {"tell the group"}
			{
				#if {!&{volume} || $volume == 0}
				{
					#system {play -qn -V0 synth exp B3 exp E3 exp B2 exp E2 delay 0 0 .2 .2 remix - fade 0 1.5 0.7 phaser &> /dev/null &}
				};
				#else
				{
					#system {play -qn -V0 synth exp B3 exp E3 exp B2 exp E2 delay 0 0 .2 .2 remix - fade 0 1.5 0.7 phaser gain $volume &> /dev/null &}
				}
			};
			#default
			{
				#if {!&{volume} || $volume == 0}
				{
					#system {play -qn -V0 synth pl A3 pl D3 pl A2 pl D2 delay 0 0 .2 .2 remix - fade 0 1.5 0.7 phaser &> /dev/null &}
				};
				#else
				{
					#system {play -qn -V0 synth pl A3 pl D3 pl A2 pl D2 delay 0 0 .2 .2 remix - fade 0 1.5 0.7 phaser gain $volume &> /dev/null &}
				}
			}
		}
	}
}
{8}

#ACTION {^You are already sound asleep!$}
{
	#if {&{autohelp}}
	{
		help random
	};
	#elseif {"$autodream" == "true"}
	{
		dream
	}
}
{8}

#ACTION {^You are awakened by the noise.$}
{
	#delay {3} {\sleep}
}
{8}

#ACTION {^You go to sleep.$}
{
	#if {&{autohelp}}
	{
		help random
	};
	#elseif {"$autodream" == "true"}
	{
		dream
	}
}
{8}

#ACTION {^You now have %1 combat points you can spend.$}
{
	#variable {cp} {%1}
}
{8}

#ACTION {^Your force shield slowly dissipates.$}
{
	#if {"$shield" == "true" && "$autorecast" == "true"}
	{
		c shield
	}
}
{8}

#ACTION {^Your muscles deflate as your strength spell wears out.}
{
	#if {"$strength" == "true" && "$autorecast" == "true"}
	{
		c strength;
		c strength;
		c strength;
		#if {"$rewield" == "true" && &{weapon}}
		{
			#send {wield $weapon};
			#unvariable {rewield}
		}
	}
}
{8}

#ACTION {^{A small tonberry|a small tonberry|the Master Tonberry}'s {hack|tail} %1 %2{!|.}$}
{
	#if {"%1" != "misses"}
	{
		play ff-hit1
	};
	#else
	{
		play ff-miss
	}
}
{8}

#ACTION {^{Fats the moogle|A warrior moogle|a warrior moogle|The moogle guard|the moogle guard|Stripe the moogle|The librarian moogle|the librarian moogle|A tan moogle|a tan moogle|Bert the moogle|A white moogle|a white moogle|A gray moogle|a gray moogle|A baby moogle|a baby moogle|An injured moogle|an injured moogle|Maria the water faerie|The soul faerie|the soul faerie}'s %1 %2 %3{!|.}$}
{
	#if {"%2" != "misses"}
	{
		#if {1d2 == 2}
		{
			play ff-hit2
		};
		#else
		{
			play ff-hit1
		}
	};
	#else
	{
		play ff-miss
	}
}
{8}

#ACTION {%1 (unique)$}
{
	play unique
}
{9}

#ACTION {%1 arrives from%2portal%3}
{
	play portal
}
{9}

#ACTION {%1 begins {her|his|its} climb %2ward.}
{
	#if {"%1" == "$groupLeader"}
	{
		climb %2
	}
}
{9}

#ACTION {%1 burps at %2.$}
{
	play burp
}
{9}

#ACTION {%1 burps in your general direction.$}
{
	play burp
}
{9}

#ACTION {%1 bur{ps|p}.$}
{
	play burp
}
{9}

#ACTION {%1 cleaves through {its|her|his} enemies!$}
{
	play cleave
}
{9}

#ACTION {%1 enters {an|a|the} %2 and disappears.$}
{
	#script {isPortal} {echo "%2" | grep -i portal};
	#if {&{isPortal[1]}}
	{
		play portal
	};
	#unvariable {isPortal};
	#if {"%1" == "$groupLeader"}
	{
		#if {&{position}}
		{
			#send {stand}
		};
		#regexp {%2} {{.*} %*} {enter &2};
		#if {&{position}}
		{
			$position
		}
	}
}
{9}

#ACTION {%1 farts, and is engulfed in a swirling green stench cloud.$}
{
	play fart
}
{9}

#ACTION {%1 hook gets caught, forcing {him|her|it} to break the line.$}
{
	play fish-line-break
}
{9}

#ACTION {%1 is ready to go, but you would be left behind!$}
{
	stand
}
{9}

#ACTION {%1 seems to have dropped %2!  You'll surely return it later.$}
{
	play pickpocket
}
{9}

#ACTION {%1 spell rips up out of the ground and explodes in a harmless shower of frost.$}
{
	play frostbite-harmless
}
{9}

#ACTION {%1 taunts %2, who suddenly attacks!$}
{
	play taunt
}
{9}

#ACTION {%1 {enchants|enchant}, then brutally {twists|twist} and {molds|mold} %2 into A metal construct.$}
{
	play metal-construct-rises
}
{9}

#ACTION {%1 {fart|farts uncerimoniously} in %2 direction.$}
{
	play fart
}
{9}

#ACTION {%1 {gets|get} a bite, and after a little effort {you manage|manages} to reel in %2.$}
{
	play catch-fish
}
{9}

#ACTION {%1 {puts|put} one end of %1 to the ground and {begins casting|begin the spell}.$}
{
	play frostbite-launch
}
{9}

#ACTION {%1 {reels|reel} in %2.$}
{
	play catch-fish
}
{9}

#ACTION {%1 {struggles|struggle} with the spell, and the line of frost zips randomly across the ground...$}
{
	#math {leftChannel} {1d9};
	#math {rightChannel} {1d9};
	#system {play -qn -V0 synth $(shuf -n 1 -e "wh" "pi" "tp" ) $(shuf -n 1 -e "flanger" "phaser 0.8 0.74 0.5 0.4 0.5") vol 0.5 remix v0.$leftChannel v0.$rightChannel fade 0 1.19 0.2 &}
}
{9}

#ACTION {%1 {throws out a line and starts|start} fishing.$}
{
	play fishing-cast
}
{9}

#ACTION {%1 {traces|trace} fiery glowing symbols in the {air before you|air}...$}
{
	#if {!&{volume} || $volume == 0}
	{
		#system {play -qn -V0 synth 00:00:02 $(shuf -n 1 -e "pi" "br") 60 synth $(shuf -n 1 -e "wh" "pi") fmod 60.25 vol 0.2 &> /dev/null &}
	};
	#else
	{
		#system {play -qn -V0 synth 00:00:02 $(shuf -n 1 -e "pi" "br") 60 synth $(shuf -n 1 -e "wh" "pi") fmod 60.25 vol 0.2 gain $volume &> /dev/null &}
	}
}
{9}

#ACTION {%1 {traces|trace} symbols in the air, which briefly spark and crackle...$}
{
	#if {!&{volume} || $volume == 0}
	{
		#system {play -qn -V0 synth 00:00:02 $(shuf -n 1 -e "sq" "exp" "tri") 60 synth $(shuf -n 1 -e "sq" "exp") fmod 60.25 vol 0.1 &> /dev/null &}
	};
	#else
	{
		#system {play -qn -V0 synth 00:00:02 $(shuf -n 1 -e "sq" "exp" "tri") 60 synth $(shuf -n 1 -e "sq" "exp") fmod 60.25 vol -.1 gain $volume &> /dev/null &}
	}
}
{9}

#ACTION {%1 {traces|trace} symbols of power, momentarily leaving trails of frost hanging in the air...$}
{
	#if {!&{volume} || $volume == 0}
	{
		#system {play -qn -V0 synth 2 $(shuf -n 1 -e "wh" "pi" "tp" ) $(shuf -n 1 -e "flanger" "phaser 0.8 0.74 0.5 0.4 0.5") vol 0.2 &> /dev/null &}
	};
	#else
	{
		#system {play -qn -V0 synth 2 $(shuf -n 1 -e "wh" "pi" "tp" ) $(shuf -n 1 -e "flanger" "phaser 0.8 0.74 0.5 0.4 0.5") vol 0.2 gain $volume &> /dev/null &}
	}
}
{9}

#ACTION {^        harvest teeth%1}
{
	#variable {harvestTeeth} {true}
}
{9}

#ACTION {^       You receive a combat point!$}
{
	#delay {0.2} {#script {echo -n "gt "; shuf -e -n 1 "I am Cornholio! I got CP for my bunghole!" "CP!" "I am Cornholio! My people they have much CP!" "Een thees battle, there was CP for my bunghole!" "My bunghole, it goes, 'blah blah blah pffft blah! CP!'" "I am Cornholio! You will give me all your Hoolio! and your CP!" "I done did get me one of them there combat points. I now have $cp available to spend! Woohoo!" "CPwn!"}}
}
{9}

#ACTION {^ %1You are now level %2 %3, with %4 total levels!$}
{
	tweet $name just gained the official rank of level %2 #%3 and now has %4 total levels! #AlterAeon;
	fbpost $name just gained the official rank of level %2 #%3 and now has %4 total levels!
}
{9}

#ACTION {^ %skick%s{average|bad|exceptional|fair|good|moderate|perfect|poor|very bad|very good}}
{
	#variable {kick} {true};
	#alias {k} {kick}
}
{9}

#ACTION {^!!SOUND(%1.wa%2)$}
{
	#switch {"%1"}
	{
		#default
		{
			#if {"%1" != "Off U=http://www.alteraeon.com/soundpack/wav_v1/"}
			{
				#system {if [ ! -f "sounds/%1.wav" ] ; then DIR=$(echo "%1.wav" | sed "s/\(.*\\/\)[^\\/]*$/\\1/");FNAME=$(echo "%1.wav" | sed "s/.*\\/\([^\\/]*\)$/\\1/");mkdir -p "sounds/$DIR";wget -qP "sounds/$DIR" "http://alteraeon.com/soundpack/wav_v1/%1.wav";fi};
				play %1
			}
		}
	}
}
{9}

#ACTION {^%S %2{n|p|s|u}, '%3'$}
{
	#if {"%1" != "{A|An|The|You}" && "%1" != "Replayin_{.*}" && "%2" != "yell" && "%2" != "{.*}utters the word"}
	{
		#switch {"%2"}
		{
			#case {"auction"}
			{
				#if {!&{volume} || $volume == 0}
				{
					#system {play -qn -V0 synth tri F2 tri C3 tri F3 tri C4 delay 0 0 .2 .2 remix - fade 0 1.5 0.7 phaser &> /dev/null &}
				};
				#else
				{
					#system {play -qn -V0 synth tri F2 tri C3 tri F3 tri C4 delay 0 0 .2 .2 remix - fade 0 1.5 0.7 phaser gain $volume &> /dev/null &}
				}
			};
			#case {"music"}
			{
				#if {!&{volume} || $volume == 0}
				{
					#system {play -qn -V0 synth pl A2 pl E3 pl A3 pl C4 pl E4 delay 0 .05 .1 .15 .2 remix - fade 0 0.5 .1 flanger norm -1 vol 0.2 &> /dev/null &}
				};
				#else
				{
					#system {play -qn -V0 synth pl A2 pl E3 pl A3 pl C4 pl E4 delay 0 .05 .1 .15 .2 remix - fade 0 0.5 .1 flanger norm -1 vol 0.2 gain $volume &> /dev/null &}
				}
			};
			#case {"tells the cla"}
			{
				#if {!&{volume} || $volume == 0}
				{
					#system {play -qn -V0 synth sin G2 sin D3 sin G3 sin D4 delay 0 0 .2 .2 remix - fade 0 1.5 0.7 phaser &> /dev/null &}
				};
				#else
				{
					#system {play -qn -V0 synth sin G2 sin D3 sin G3 sin D4 delay 0 0 .2 .2 remix - fade 0 1.5 0.7 phaser gain $volume &> /dev/null &}
				}
			};
			#case {"tells the grou"}
			{
				#if {!&{volume} || $volume == 0}
				{
					#system {play -qn -V0 synth exp E2 exp B2 exp E3 exp B3 delay 0 0 .2 .2 remix - fade 0 1.5 0.7 phaser &> /dev/null &}
				};
				#else
				{
					#system {play -qn -V0 synth exp E2 exp B2 exp E3 exp B3 delay 0 0 .2 .2 remix - fade 0 1.5 0.7 phaser gain $volume &> /dev/null &}
				}
			};
			#default
			{
				#if {!&{volume} || $volume == 0}
				{
					#system {play -qn -V0 synth pl D2 pl A2 pl D3 pl A3 delay 0 0 .2 .2 remix - fade 0 1.5 0.7 phaser &> /dev/null &}
				};
				#else
				{
					#system {play -qn -V0 synth pl D2 pl A2 pl D3 pl A3 delay 0 0 .2 .2 remix - fade 0 1.5 0.7 phaser gain $volume &> /dev/null &}
				}
			}
		};
		#if {&{speech}}
		{
			#system {spd-say -S -P important -r $speechRate "%0"}
		}
	}
}
{9}

#ACTION {^%S goes to sleep.}
{
	#if {&{autoregen} && &{groupLeader} && "%1" == "$groupLeader"}
	{
		sleep
	}
}
{9}

#ACTION {^%S sits down and rests.$}
{
	#if {&{autoregen} && &{groupLeader} && "%1" == "$groupLeader"}
	{
		rest
	}
}
{9}

#ACTION {^%S stops resting, and stands up.$}
{
	#if {&{autoregen} && &{groupLeader} && "%1" == "$groupLeader" && &{position}}
	{
		stand
	}
}
{9}

#ACTION {^%w calls upon %2 to bring the corpse of $name back to life!$}
{
	tweet $name was resurrected by %1! #AlterAeon;
	fbpost $name was resurrected by %1!
}
{9}

#ACTION {^(%1 is trying to get your attention)$}
{
	#if {!&{replaying}}
	{
		#delay {0.5} {play attention}
	}
}
{9}

#ACTION {^(You {may be able to|can} use waypoint %1 {to|to more easily} bridge the distance.)$}
{
	#send {waypoint %1};
	waypoint $waypoint
}
{9}

#ACTION {^(friend) %1 has entered the game.$}
{
	#variable {friendNameEnter} {%1};
	#if {!&{replaying}}
	{
		play friend-enter
	}
}
{9}

#ACTION {^(friend) %1 has left the game.$}
{
	#if {"%1" == "$friendNameEnter"}
	{
		#unvariable {friendNameEnter}
	};
	#if {!&{replaying}}
	{
		play friend-leave
	}
}
{9}

#ACTION {^(friend) %S was kille%*}
{
	play friend-death
}
{9}

#ACTION {^(notify) $name%1}
{
	tweet $name %1 #AlterAeon;
	fbpost $name %1
}
{9}

#ACTION {^-*BOOM*- Your lightning bolt strikes a ball of lightning, causing an explosion near %1!$}
{
	tweet -*BOOM*- $name's lightning bolt struck a ball of lightning, causing an explosion near %1! #AlterAeon;
	fbpost -*BOOM*- $name's lightning bolt struck a ball of lightning, causing an explosion near %1!
}
{9}

#ACTION {^A %1 soulstone disappears in a puff of smoke, and you hear demonic laughter all around you.$}
{
	play demonic-laughter
}
{9}

#ACTION {^A blood red winged demon explodes in fine haze of red mist!$}
{
	play bloodmist-death
}
{9}

#ACTION {^A dark mist fills the room, and you suddenly can't breathe!$}
{
	play dying-breath-release
}
{9}

#ACTION {^A fissure opens up in the ground beneath a %1 soulstone and swallows it up!$}
{
	play demonic-laughter
}
{9}

#ACTION {^A magical hammer disappears in a blinding flash of light! (worn by you)}
{
	#if {"$spiritHammer" == "true" && "$autorecast" == "true"}
	{
		c spirit
	}
}
{9}

#ACTION {^A shadow fiend has left the group.$}
{
	play shadow-fiend-leave
}
{9}

#ACTION {^A shadow fiend stops following you.$}
{
	#if {"$autofiend" == "true"}
	{
		f
	}
}
{9}

#ACTION {^A skeletal mage stops following you.$}
{
	#if {"$autoskeleton" == "true"}
	{
		#unvariable {autoskeleton};
		#delay {0.2} {c skeletal mage};
		#delay {2} {#variable {autoskeleton} {true}}
	}
}
{9}

#ACTION {^A skeleton stops following you.$}
{
	#if {"$autoskeleton" == "true"}
	{
		#unvariable {autoskeleton};
		#delay {0.2} {c skeletal warrior};
		#delay {2} {#variable {autoskeleton} {true}}
	}
}
{9}

#ACTION {^A small clawed hand reaches up through the ground, grabs a %1 soulstone, and vanishes.$}
{
	play demonic-laughter
}
{9}

#ACTION {^A white line of frost zips across the ground away from %1 staff%2.$}
{
	#if {!&{volume} || $volume == 0}
	{
		#system {play -qn -V0 synth $(shuf -n 1 -e "wh" "pi" "tp" ) $(shuf -n 1 -e "flanger" "phaser 0.8 0.74 0.5 0.4 0.5") vol 0.2 fade 0 1.19 0.3 &> /dev/null &}
	};
	#else
	{
		#system {play -qn -V0 synth $(shuf -n 1 -e "wh" "pi" "tp" ) $(shuf -n 1 -e "flanger" "phaser 0.8 0.74 0.5 0.4 0.5") vol 0.2 fade 0 1.19 0.3 gain $volume &> /dev/null &}
	}
}
{9}

#ACTION {^After a big fight, %1 {reels|reel} in %2.$}
{
	play catch-fish
}
{9}

#ACTION {^Alas, you cannot go that way.$}
{
	play bump
}
{9}

#ACTION {^Huge spikes of ice spring out of the ground directly beneath %1!$}
{
	play frostbite-hit
}
{9}

#ACTION {^It {starts|is} raining.$}
{
	play rain
}
{9}

#ACTION {^Neebla encourages you to consider converting to Os.$}
{
	#if {1d2 == 2}
	{
		emot encourages Neebla to shut the hell up.
	};
	#else
	{
		emot encourages Neebla to go straight to hell.
	}
}
{9}

#ACTION {^REBOOT IMPENDING, EVERYONE PLEASE RECALL AND SAVE.$}
{
	#variable {rebootTime} {1};
	#if {!&{volume} || $volume == 0}
	{
		#system {play -qn -V0 synth 2 exp ${rebootTime}00:${rebootTime}0 exp $((${rebootTime}00*2)):$((${rebootTime}0*2)) remix - vol 0.8 &> /dev/null &}
	};
	#else
	{
		#system {play -qn -V0 synth 2 exp ${rebootTime}00:${rebootTime}0 exp $((${rebootTime}00*2)):$((${rebootTime}0*2)) remix - vol 0.8 gain $volume &> /dev/null &}
	}
}
{9}

#ACTION {^REBOOT IN APPROXIMATELY %1 MINUTES, FYI.$}
{
	#variable {rebootTime} {%1};
	#if {!&{volume} || $volume == 0}
	{
		#system {play -qn -V0 synth 2 exp ${rebootTime}00:${rebootTime}0 exp $((${rebootTime}00*2)):$((${rebootTime}0*2)) remix - vol 0.8 &> /dev/null &}
	};
	#else
	{
		#system {play -qn -V0 synth 2 exp ${rebootTime}00:${rebootTime}0 exp $((${rebootTime}00*2)):$((${rebootTime}0*2)) remix - vol 0.8 gain $volume &> /dev/null &}
	}
}
{9}

#ACTION {^Reconnecting.$}
{
	#cursor {echo} {on};
	set telnetga off | prefix silent_;
	set msp on | prefix silent_;
	set ctrigger on | prefix silent_;
	#line {gag};
	lecho tintin++ pack by Storm Dragon: http://stormdragon.us/?p=256;
	#variable {loggedIn} {true}
}
{9}

#ACTION {^Sleep while fighting?  Are you mad?$}
{
	#unvariable {position}
}
{9}

#ACTION {^Someone steps on you, and you awake to see warriors locked in mortal combat!$}
{
	#unvariable {position}
}
{9}

#ACTION {^The %1 line of frost zips randomly across the ground...$}
{
	#math {leftChannel} {1d9};
	#math {rightChannel} {1d9};
	#system {play -qn -V0 synth $(shuf -n 1 -e "wh" "pi" "tp" ) $(shuf -n 1 -e "flanger" "phaser 0.8 0.74 0.5 0.4 0.5") vol 0.5 remix v0.$leftChannel v0.$rightChannel fade 0 1.19 0.2 &}
}
{9}

#ACTION {^The Master Tonberry is DEAD!$}
{
	play ff-boss-death
}
{9}

#ACTION {^The blade splits down the red lines and shatters, leaving behind oddly bloody fragments that seem to vanish when %1 not looking at them. (worn by you)$}
{
	#if {"$boneBlade" == "true"}
	{
		c bone blade
	}
}
{9}

#ACTION {^The bones splinter and shatter, leaving behind only broken pieces.$}
{
	play bone-guardian-death
}
{9}

#ACTION {^The detect invisible wears off.$}
{
	#if {"$detectInvisibility" == "true"}
	{
		c detect invisibility
	}
}
{9}

#ACTION {^The magic holding a flesh beast together suddenly fails, leaving%*}
{
	play flesh-beast-death
}
{9}

#ACTION {^The physical reserve deep within you feels replenished.$}
{
	#unvariable {exhausted}
}
{9}

#ACTION {^The red in your vision disappears.$}
{
	#if {"$infravision" == "true" && "$autorecast" == "true"}
	{
		c infravision
	}
}
{9}

#ACTION {^You add A %1 to your group.$}
{
	#if {"%1" == "zombie" || "%1" == "ghoul" || "%1" == "mummy" || "%1" == "vampire"}
	{
		#variable {lastRaisedMinion} {%1}
	}
}
{9}

#ACTION {^You are asleep... ZZZZZZZZ *snork* ZZZZZ...}
{
	getup;
	$lastSpell
}
{9}

#ACTION {^You are awakened by %1.$}
{
	#unvariable {position}
}
{9}

#ACTION {^You are now wearing set '%1'.$}
{
	show stats | prefix silent_;
	show clev | prefix silent_
}
{9}

#ACTION {^You are pretty hurt.$}
{
	#if {"$autorecall" == "true"}
	{
		#if {$currentMana >= 15 && "$wordOfRecall" == "true"}
		{
			.
		};
		#else
		{
			/
		}
	}
}
{9}

#ACTION {^You become better at %1!}
{
	tweet $name became better at %1! #AlterAeon;
	fbpost $name became better at %1!
}
{9}

#ACTION {^You burp in the general direction of %1.}
{
	play burp
}
{9}

#ACTION {^You can't rest while fighting!$}
{
	#unvariable {position}
}
{9}

#ACTION {^You can't sleep here, there's a battle going on!$}
{
	#unvariable {position}
}
{9}

#ACTION {^You cast the spell to separate soul from body, and pull %1's essence into a %2 soulstone!$}
{
	#if {"$autostore" == "true"}
	{
		put soulstone $container
	}
}
{9}

#ACTION {^You end up with a stinky, nasty mess, but nothing useful.}
{
	empty $brewContainer
}
{9}

#ACTION {^You fart then look around innocently.$}
{
	play fart
}
{9}

#ACTION {^You fart, and are totally amazed at the resulting smell.$}
{
	play fart
}
{9}

#ACTION {^You feel a lump, so you cut open an organ and retrieve a jagged yellow stone.$}
{
	#if {"$autojunk" == "true"}
	{
		junk jagged
	}
}
{9}

#ACTION {^You feel a slight tingle and you feel somehow abandoned.}
{
	#if {"$bless" == "true" && "$autorecast" == "true"}
	{
		c bless
	}
}
{9}

#ACTION {^You feel less aware of your surroundings.$}
{
	#if {&{senseLife}}
	{
		c sense life
	}
}
{9}

#ACTION {^You feel less protected from evil.$}
{
	#if {"$protectionFromEvil" == "true" && "$autorecast" == "true"}
	{
		cast protection from evil
	}
}
{9}

#ACTION {^You feel less protected.}
{
	#if {"$armor" == "true" && "$autorecast" == "true"}
	{
		c armor
	}
}
{9}

#ACTION {^You feel new bones and flesh forming a protective armor plate over your body.$}
{
	#if {"$soulbind" == "true"}
	{
		#send {stand;get pale blue soulstone from $container};
		soulbind armor
	};
	#if {&{position}}
	{
		$position
	}
}
{9}

#ACTION {^You feel the pent up vengeance in your blood dissipate.$}
{
	#if {"$dyingBreath" == "true" && "$autorecast" == "true"}
	{
		c dying breath
	}
}
{9}

#ACTION {^You find a small bladder of green fluid, and carefully tie off the ends before removing it.$}
{
	#if {"$autojunk" == "true"}
	{
		junk bladder
	}
}
{9}

#ACTION {^You find an out-of-place dark mass, and carefully cut it from its surroundings.$}
{
	#if {"$autojunk" == "true"}
	{
		junk tumor
	}
}
{9}

#ACTION {^You gain a practice!$}
{
	play train-practice
}
{9}

#ACTION {^You guide the spell directly toward %1!$}
{
	#if {!&{volume} || $volume == 0}
	{
		#system {play -qn -V0 synth $(shuf -n 1 -e "wh" "pi" "tp" ) $(shuf -n 1 -e "flanger" "phaser 0.8 0.74 0.5 0.4 0.5") vol 0.2 fade 0 1.19 0.3 &> /dev/null &}
	};
	#else
	{
		#system {play -qn -V0 synth $(shuf -n 1 -e "wh" "pi" "tp" ) $(shuf -n 1 -e "flanger" "phaser 0.8 0.74 0.5 0.4 0.5") vol 0.2 fade 0 1.19 0.3 gain $volume &> /dev/null &}
	}
}
{9}

#ACTION {^You happen to find %d gold coins, how fortunate!$}
{
	play pickpocket
}
{9}

#ACTION {^You have completed the achievement:%1}
{
	tweet $name has completed the achievement %1! #AlterAeon;
	fbpost $name has completed the achievement %1!
}
{9}

#ACTION {^You have sudden insight, and become much better at %1!$}
{
	tweet $name had sudden insight, and is now much better at %1! #alterAeon;
	fbpost $name had sudden insight, and is now much better at %1!
}
{9}

#ACTION {^You make a mistake, the preparation fails, and a %1 soulstone is lost.$}
{
	#send {get %1 soulstone from $container};
	prepare corpse %1 soulstone
}
{9}

#ACTION {^You make a small incision and drain some fluid into a vial of bile.$}
{
	#if {"$autojunk" == "true"}
	{
		junk bile
	}
}
{9}

#ACTION {^You notice that the foul taste in your mouth seems to be gone.$}
{
	#if {"$foulBlood" == "true" && "$autorecast" == "true"}
	{
		c foulblood
	}
}
{9}

#ACTION {^You now follow %S!$}
{
	#script {i} {echo "$name $(shuf -n 1 -e "is now a follower of the god %1 and shall strike down nonbelievers!" "is now a %1's witness! Beware the pamphlets!" "boldly presses on in the name of the all powerful %1!")"};
	#variable {i} {$i[1]};
	tweet $i #AlterAeon;
	fbpost $i
}
{9}

#ACTION {^You practice %1(%2 percent gained).$}
{
	spell %1;
	skill %1
}
{9}

#ACTION {^You quickly place a hand on the inside of a bone shield to bind it to you.$}
{
	wear shield
}
{9}

#ACTION {^You receive %1 gold coins for your sacrifice.}
{
	split %1
}
{9}

#ACTION {^You roughly hack out a small bladder of black fluid and tie off the ends with string.$}
{
	#if {"$autojunk" == "true"}
	{
		junk bile
	}
}
{9}

#ACTION {^You slowly float to the ground.$}
{
	#if {"$fly" == "true" && "$autorecast" == "true"}
	{
		c fly
	}
}
{9}

#ACTION {^You smell something foul. Ok, who farted?$}
{
	play fart
}
{9}

#ACTION {^You stop using%*}
{
	show stats | prefix silent_;
	show clev | prefix silent_;
	eq | grep wielded | prefix silent_
}
{9}

#ACTION {^You struggle to pull %1 essence into a %2 soulstone!$}
{
	#if {"$autostore" == "true"}
	{
		put soulstone $container
	}
}
{9}

#ACTION {^You suddenly see your mistake, reverse the incantation and sacrifice a %1 soulstone.$}
{
	play demonic-laugh
}
{9}

#ACTION {^You summon A shadow fiend, and your offering of %1 is accepted.$}
{
	play summon-shadow-fiend
}
{9}

#ACTION {^You taunt %1, and {she|he|it} attacks you!$}
{
	play taunt
}
{9}

#ACTION {^You try, but the blood fever remains just out of your reach!$}
{
	berserk
}
{9}

#ACTION {^You {decide to reel in your line and take a break for a while|finish reeling in your line and stop fishing|are no longer fishing}.$}
{
	play stop-fishing
}
{9}

#ACTION {^You {hold|wear|wield}%*}
{
	show stats | prefix silent_;
	show clev | prefix silent_
}
{9}

#ACTION {^You've won %1 gold coins!$}
{
	tweet $name won %1 gold coins! #AlterAeon #slots;
	fbpost $name won %1 gold coins from the 'Three Gold Rings' slot machine!
}
{9}

#ACTION {^Your displaced image rejoins your body.$}
{
	#if {"$displacement" == "true" && "$autorecast" == "true"}
	{
		c displacement
	}
}
{9}

#ACTION {^Your experience cap is %1 exp.$}
{
	#variable {cap} {%1}
}
{9}

#ACTION {^Your magically induced dexterity abruptly disappears.}
{
	#if {"$dexterity" == "true" && "$autorecast" == "true"}
	{
		#3 c dex
	}
}
{9}

#ACTION {^Your shield of faith dissipates, and you no longer feel as protected by your god.$}
{
	#if {"$faithShield" == "true" && "$autorecast" == "true"}
	{
		c faith shield
	}
}
{9}

#ACTION {^Your skin returns to its normal texture.$}
{
	#if {"$stoneSkin" == "true" && "$autorecast" == "true"}
	{
		c stone
	}
}
{9}

#ACTION {^Your skin tingles as you pass through the magical barrier.$}
{
	play ff-barrier
}
{9}

#ACTION {^Your {chr|con|dex|int|str|wis} increases%*}
{
	show stats | prefix silent_
}
{9}

#ACTION {^[Exits: %*}
{
	#if {&{tracking}}
	{
		nearby | grep -i $tracking | prefix tracking_
	};
	#if {&{automap}}
	{
		map
	}
}
{9}

#ACTION {^kxwt_event quest %1}
{
	tweet $name completed quest: %1 #AlterAeon;
	fbpost $name completed quest: %1
}
{9}

#ACTION {^kxwt_exp %d}
{
	#variable {lastReceivedExp} {%1};
	#if {!&{oldExp} || $oldExp > %1}
	{
		#variable {oldExp} {%1}
	};
	#math {expGained} {%1 - $oldExp};
	#if {&{groupExperience}}
	{
		#math {groupExperience} {$groupExperience + $expGained}
	};
	#variable {oldExp} {%1};
	#if {&{autolevelClass}}
	{
		level | prefix silent_
	};
	#if {"$autobuypractice" == "true" && %1 >= $buyPracticeExperience}
	{
		train practice
	}
}
{9}

#ACTION {^kxwt_fighting %1 %2 %3}
{
	#variable {inBattle} {true};
	#if {"$beeps" == "true"}
	{
		#if {%1 >= 90}
		{
			#math {enemyConditionTone} {%1 + 400}
		};
		#elseif {%1 >= 80}
		{
			#math {enemyConditionTone} {%1 + 380}
		};
		#elseif {%1 >= 70}
		{
			#math {enemyConditionTone} {%1 + 360}
		};
		#elseif {%1 >= 60}
		{
			#math {enemyConditionTone} {%1 + 340}
		};
		#elseif {%1 >= 50}
		{
			#math {enemyConditionTone} {%1 + 320}
		};
		#elseif {%1 >= 40}
		{
			#math {enemyConditionTone} {%1 + 300}
		};
		#elseif {%1 >= 30}
		{
			#math {enemyConditionTone} {%1 + 280}
		};
		#elseif {%1 >= 20}
		{
			#math {enemyConditionTone} {%1 + 260}
		};
		#elseif {%1 >= 10}
		{
			#math {enemyConditionTone} {%1 + 240}
		};
		#else
		{
			#math {enemyConditionTone} {%1 + 220}
		};
		#if {!&{volume} || $volume == 0}
		{
			#system {play -q -V0 -n synth 0.06 tri $enemyConditionTone fade 0.01 0.06 &> /dev/null &}
		};
		#else
		{
			#system {play -q -V0 -n synth 0.06 tri $enemyConditionTone fade 0.01 0.06 gain $volume &> /dev/null &}
		}
	}
}
{9}

#ACTION {^kxwt_mdeath$}
{
	#if {&{inBattle}}
	{
		#unvariable {inBattle}
	};
	#if {&{lastReceivedExp}}
	{
		#if {&{throwWeapon}}
		{
			get all.$throwWeapon corpse
		};
		#if {&{lastSoulSteal}}
		{
			#unvariable {lastSoulSteal}
		};
		#if {!&{pkMode}}
		{
			#if {"$autoconsume" == "true"}
			{
				control all consume corpse
			};
			#if {"$autobloodsacrifice" == "true"}
			{
				bsac corpse
			};
			#if {"$cryOfVictory" == "true"}
			{
				victory
			};
			#if {&{combat}}
			{
				#foreach {$combat} {spell}
				{
					$spell
				}
			};
			#unvariable {combat};
			#if {"$corpsecutter" == "true"}
			{
				harvest components corpse
			};
			#if {"$autobrew" == "true"}
			{
				#delay {1d5} {brew p i | prefix silent_}
			};
			#if {"$autofleshbeast" == "true"}
			{
				#if {"$makeNewFleshBeast" == "true"}
				{
					c flesh corpse
				};
				#else
				{
					lowhp | prefix silent_
				}
			};
			#if {"$harvestTeeth" == "true"}
			{
				harvest teeth corpse
			};
			#if {&{lastReceivedExp}}
			{
				#unvariable {lastReceivedExp}
			};
			#if {&{position}}
			{
				$position
			}
		}
	}
}
{9}

#ACTION {^kxwt_terrain %1}
{
	#if {"$bgmusic" == "true"}
	{
		#if {$oldTerrain != %1}
		{
			#script {bgmFileLength} {if [ -e "sounds/ambiance/terrains/%1.ogg" ] ; then soxi sounds/ambiance/terrains/%1.ogg | grep Duration | cut -f 1 -d "=" | cut -f 4 -d ":";else echo "0";fi};
			#if {${bgmFileLength[1]} != 0}
			{
				bgmPlay %1;
				#ticker {bgMusic} {bgmPlay %1} {${bgmFileLength[1]} - 0.05}
			};
			#else
			{
				#unticker {bgMusic}
			}
		};
		#if {%1 >= 3 && %1 <= 6}
		{
			#ticker {ambiance} {#math {ambNumber} {1d2};#loop {1} {$ambNumber} {ambianceIndex} {ambPlay wilderness};#unvariable {ambNumber}} {2d10}
		};
		#elseif {%1 == 2 || %1 == 28}
		{
			#ticker {ambiance} {#math {ambNumber} {1d2};#loop {1} {$ambNumber} {ambianceIndex} {ambPlay town};#unvariable {ambNumber}} {2d10}
		};
		#elseif {%1 == 7 || %1 == 29}
		{
			#ticker {ambiance} {#math {ambNumber} {1d2};#loop {1} {$ambNumber} {ambianceIndex} {ambPlay swamp};#unvariable {ambNumber}} {2d10}
		};
		#elseif {%1 == 14 || %1 == 18}
		{
			#ticker {ambiance} {#math {ambNumber} {1d2};#loop {1} {$ambNumber} {ambianceIndex} {ambPlay ocean};#unvariable {ambNumber}} {2d10}
		};
		#else
		{
			#unticker {ambiance}
		};
		#variable {oldTerrain} {%1}
	}
}
{9}

#ACTION {^large chunks. (worn by you)$}
{
	#if {"$autobonearmor" == "true"}
	{
		c bone armor $name
	}
}
{9}

#ACTION {^silent_A flesh beast %d}
{
	c flesh corpse
}
{9}

#ACTION {^silent_You are casting at level %1 mage, level %2 cleric, level %3 necromancer%*}
{
	#if {&{mageClev} && $mageClev != %1}
	{
		#showme {You are now casting at level %1 mage.}
	};
	#if {&{clericClev} && $clericClev != %2}
	{
		#showme {You are now casting at level %2 cleric.}
	};
	#if {&{necromancerClev} && $necromancerClev != %3}
	{
		#showme {You are now casting at level %3 necromancer.}
	};
	#variable {mageClev} {%1};
	#variable {clericClev} {%2};
	#variable {necromancerClev} {%3}
}
{9}

#ACTION {^silent_You currently gain %1 hitpoints, %2 mana, and %3 movement while {standing|sleeping|sitting}.$}
{
	#math {hpRegenTime} {($maxHp - $currentHp) / %1};
	#math {mnRegenTime} {($maxMana - $currentMana) / %2};
	#math {mvRegenTime} {($maxMv - $currentMv) / %3};
	#delay {0.1} {#variable {regenTime} {$hpRegenTime};#if {$mnRegenTime > $regenTime}{#variable {regenTime} {$mnRegenTime}};#if {$mvRegenTime > $regenTime}{#variable {regenTime} {$mvRegenTime}};#if {$regenTime > 0}{#showme {Approximately $regenTime ticks until regeneration is complete.}}}
}
{9}

#ACTION {^silent_You have %1/%2 str, %3/%4 int, %5/%6 wis, %7/%8 dex, %9/%10 con, and %11/%12 chr.$}
{
	#if {&{strBonus} && $strBonus != %1}
	{
		#showme {You now have %1 of %2 strength.}
	};
	#if {&{intBonus} && $intBonus != %3}
	{
		#showme {You now have %3 of %4 intelligence.}
	};
	#if {&{wisBonus} && $wisBonus != %5}
	{
		#showme {You now have %5 of %6 wisdom.}
	};
	#if {&{dexBonus} && $dexBonus != %7}
	{
		#showme {You now have %7 of %8 dexterity.}
	};
	#if {&{conBonus} && $conBonus != %9}
	{
		#showme {You now have %9 of %10 constitution.}
	};
	#if {&{chrBonus} && $chrBonus != %11}
	{
		#showme {You now have %11 of %12 charisma.}
	};
	#variable {strBonus} {%1};
	#variable {str} {%2};
	#variable {intBonus} {%3};
	#variable {int} {%4};
	#variable {wisBonus} {%5};
	#variable {wis} {%6};
	#variable {dexBonus} {%7};
	#variable {dex} {%8};
	#variable {conBonus} {%9};
	#variable {con} {%10};
	#variable {chrBonus} {%11};
	#variable {chr} {%12}
}
{9}

#ACTION {^silent_{Cleric|Mage|Necromancer|Thief|Warrior}  %2You can level!$}
{
	#if {"$autolevelClass" == "All" && !&{justLeveled}}
	{
		level %1;
		#variable {justLeveled} {true};
		#delay {15} {#unvariable {justLeveled}}
	};
	#if {"$autolevelClass" == "%1" && !&{justLeveled}}
	{
		level $autolevelClass;
		#variable {justLeveled} {true};
		#delay {15} {#unvariable {justLeveled}}
	}
}
{9}

#ACTION {^{Fats the moogle|A warrior moogle|The moogle guard|Stripe the moogle|The librarian moogle|A tan moogle|Bert the moogle|A white moogle|A gray moogle|A baby moogle|An injured moogle|A small tonberry|Maria the water faerie|The soul faerie} is DEAD!$}
{
	play ff-death
}
{9}

#ACTION {^{Silent_|You} end up with a stinky, nasty mess, but no magic potion.}
{
	empty $brewContainer
}
{9}

#ACTION {^{Something REALLY big catches your line, and breaks it!|Your hook gets stuck on something, and you have to break the line.}$}
{
	play fish-line-break
}
{9}

#ACTION {^{\(|\[}%S{\)|\]} %S: %5}
{
	#if {"%2" != "friend"}
	{
		#switch {"%2"}
		{
			#default
			{
				#if {!&{volume} || $volume == 0}
				{
					#system {play -qn -V0 synth pl A2 pl D2 pl A2 pl D2 delay 0 0 .2 .2 remix - fade 0 1.5 0.7 phaser &> /dev/null &}
				};
				#else
				{
					#system {play -qn -V0 synth pl A2 pl D2 pl A2 pl D2 delay 0 0 .2 .2 remix - fade 0 1.5 0.7 phaser gain $volume &> /dev/null &}
				}
			}
		}
	}
}
{9}

#ACTION {^{silent_You|You} can train to get a practice, at a cost of %d experience each.$}
{
	#variable {buyPracticeExperience} {%2}
}
{9}

#ALIAS {skill %1}
{
	skills | grep -i %1
}
{(}

#ALIAS {^{cc|cca|ccas|ccast|channelc|channelca|channelcas|channelcast} %1}
{
	#variable {lastSpell} {%0};
	\channelcast %1
}
{1}

#ALIAS {^{fl|fle|flee}$}
{
	run
}
{1}

#ALIAS {h}
{
	c $healSpell
}
{1}

#ALIAS {{c|ca|cas|cast} %1}
{
	#variable {lastSpell} {%0};
	#if {&{position}}
	{
		getup;
		#send {cast %1};
		$position
	};
	#else
	{
		#send {cast %1}
	}
}
{1}

#ALIAS {^1$}
{
	#if {"$loggedIn" == "false"}
	{
		#send {1};
		set telnetga off | prefix silent_;
		#cursor {echo} {on};
		set ctrigger on | prefix silent_;
		set msp on | prefix silent_;
		lecho tintin++ pack by Storm Dragon: http://stormdragon.us/?p=256;
		%connect cowsay | prefix silent_;
		#variable {loggedIn} {true}
	};
	#else
	{
		#send {1}
	}
}
{5}

#ALIAS {^cspam$}
{
	#class {cspam} {read} {cspam.tin};
	#class {gameData} {open};
	#showme {Minion and battle spam reduced.}
}
{5}

#ALIAS {^fbpost %1}
{
	#if {"$facebook" == "true"}
	{
		#script {dummyvar} {fbcmd post "%1" "Alter Aeon" "http://www.alteraeon.com/" &> /dev/null&}
	}
}
{5}

#ALIAS {^musicurl %S$}
{
	#if {"%1" == "jango"}
	{
		#variable {musicURL} {http://www.jango.com/music/$artist?l=0};
		#variable {musicProvider} {Jango};
		#showme {Music search results now provided by Jango.}
	};
	#elseif {"%1" == "last.fm"}
	{
		#variable {musicURL}{http://www.last.fm/search?q=$artist%%2B$title};
		#variable {musicProvider} {Last.fm};
		#showme {Music search results now provided by Last.fm.}
	};
	#elseif {"%1" == "pandora"}
	{
		#variable {musicURL} {http://www.pandora.com/search/$artist%%20$title};
		#variable {musicProvider} {Pandora};
		#showme {Music search results now provided by Pandora.}
	};
	#elseif {"%1" == "youtube"}
	{
		#variable {musicURL} {http://www.youtube.com/results?search_query=$artist%%20$title};
		#variable {musicProvider} {Youtube};
		#showme {Music search results now provided by Youtube.}
	};
	#else
	{
		#showme {Valid choices are jango, last.fm, pandora, or youtube}
	}
}
{5}

#ALIAS {^nocspam$}
{
	#class {cspam} {kill};
	#showme {Minion and battle spam will no longer be modified.}
}
{5}

#ALIAS {^nopkmode$}
{
	#unvariable {pkMode};
	#showme {PK mode disabled.}
}
{5}

#ALIAS {^pkmode$}
{
	#variable {pkMode} {true};
	#showme {PK mode activated.}
}
{5}

#ALIAS {^r$}
{
	#variable {randomAttack} { };
	#if {"$bash" == "true"}
	{
		#variable {randomAttack} {$randomAttack "bash"}
	};
	#if {"$cleave" == "true"}
	{
		#variable {randomAttack} {$randomAttack "cleave"}
	};
	#if {"$feint" == "true"}
	{
		#variable {randomAttack} {$randomAttack "feint"}
	};
	#if {"$jab" == "true"}
	{
		#variable {randomAttack} {$randomAttack "jab"}
	};
	#if {"$kick" == "true"}
	{
		#variable {randomAttack} {$randomAttack "kick"}
	};
	#if {"$leapAttack" == "true"}
	{
		#variable {randomAttack} {$randomAttack "leap"}
	};
	#if {"$lunge" == "true"}
	{
		#variable {randomAttack} {$randomAttack "lunge"}
	};
	#if {"$riposte" == "true"}
	{
		#variable {randomAttack} {$randomAttack "riposte"}
	};
	#if {"$stomp" == "true"}
	{
		#variable {randomAttack} {$randomAttack "stomp"}
	};
	#if {"$trip" == "true"}
	{
		#variable {randomAttack} {$randomAttack "trip"}
	};
	#if {"$whirlwind" == "true"}
	{
		#variable {randomAttack} {$randomAttack "whirlwind"}
	};
	#script {shuf -n 1 -e $randomAttack}
}
{5}

#ALIAS {^woad$}
{
	get $woadMaterial from $container;
	drop $woadMaterial;
	#if {&{autowoad}}
	{
		#unvariable {autowoad};
		#delay {5} {#var {autowoad} {true}}
	};
	#delay {0.2} {c wood $woadMaterial}
}
{5}

#ALIAS {^{mi|min|mini|minio|minion|minions}$}
{
	#send {minions};
	control | grep -i necromancer | prefix silent_
}
{5}

#ALIAS {^{scro|scrol|scroll} %1}
{
	#variable {battleScroll} {%1};
	#showme {You can now use alt+backslash to use get the %1 from your container and use it.}
}
{5}

#ALIAS {^{t|th|thr|thro|throw} %1 %2}
{
	#variable {throwWeapon} {%1};
	#send {throw %1 %2;get %1}
}
{5}

#ALIAS {ambPlay %1}
{
	#script {ambFile} {shuf -n 1 -e $(ls sounds/ambiance/%1/*)};
	#math {lChannel} {1d5};
	#math {rChannel} {1d5};
	#if {!&{volume} || $volume == 0}
	{
		#system {play -q ${ambFile[1]} remix v0.${lChannel} v0.${rChannel} &> /dev/null &}
	};
	#else
	{
		#system {play -q ${ambFile[1]} gain $volume remix v0.${lChannel} v0.${rChannel} &> /dev/null &}
	}
}
{5}

#ALIAS {autobone}
{
	#variable {autowoad} {false};
	#variable {autoclay} {false};
	#variable {autobone} {true};
	#showme {You will now attempt to make a new bone guardian automatically.}
}
{5}

#ALIAS {autobonearmor}
{
	#variable {autobonearmor} {true};
	#showme {Bone armor will now autocast}
}
{5}

#ALIAS {autoclay}
{
	#variable {autoclay} {true};
	#variable {autowoad} {false};
	#variable {autobone} {false};
	#showme {Clay man will now autocast}
}
{5}

#ALIAS {autofiend}
{
	#variable {autofiend} {true};
	#showme {You will now make a new shadow fiend automatically.}
}
{5}

#ALIAS {autometal}
{
	#variable {autowoad} {false};
	#variable {autoclay} {false};
	#variable {autobone} {false};
	#variable {autometal} {true};
	#showme {You will now attempt to make a new metal construct automatically.}
}
{5}

#ALIAS {autorefresh}
{
	#variable {autorefresh} {true};
	#showme {You will automaticaly cast refresh spells if your MV is low.}
}
{5}

#ALIAS {autoskeleton}
{
	#variable {autoskeleton} {true};
	#showme {skeletons will now autocast}
}
{5}

#ALIAS {autostore}
{
	#variable {autostore} {true};
	#showme {You will now put certain items in your container when you get them.}
}
{5}

#ALIAS {autowoad}
{
	#variable {autowoad} {true};
	#variable {autoclay} {false};
	#variable {autobone} {false};
	#showme {You will now attempt to make a new wood woad automatically.}
}
{5}

#ALIAS {display_channel %1 %2 %3}
{
	#if {%2 <= 0}
	{
		replay %3 | head -2
	};
	#elseif {%2 > 0 && %2 < 3 || %2 == 5}
	{
		replay %1 %3 | head -2
	};
	#elseif {%2 == 3}
	{
		replay | grep -i (friend) | tail %3 | head -1
	};
	#else
	{
		replay | grep -i tells the group, | tail %3 | head -1
	};
	#variable {replaying} {true};
	#delay {2} {#unvariable {replaying}}
}
{5}

#ALIAS {id %1}
{
	#if {"$identify" == "true"}
	{
		c identify %1
	};
	#else
	{
		#send {identify %1}
	}
}
{5}

#ALIAS {noautobone}
{
	#variable {autobone} {false};
	#showme {Bone guardian will no longer autocast.}
}
{5}

#ALIAS {noautobonearmor}
{
	#variable {autobonearmor} {false};
	#showme {Bone armor will no longer autocast.}
}
{5}

#ALIAS {noautoclay}
{
	#variable {autoclay} {false};
	#showme {Clay man will no longer autocast.}
}
{5}

#ALIAS {noautofiend}
{
	#variable {autofiend} {false};
	#showme {You will no longer automatically make shadow fiends.}
}
{5}

#ALIAS {noautometal}
{
	#variable {autometal} {false};
	#showme {Metal construct will no longer autocast.}
}
{5}

#ALIAS {noautorefresh}
{
	#variable {autorefresh} {false};
	#showme {You will no longer automaticaly cast refresh spells.}
}
{5}

#ALIAS {noautoskeleton}
{
	#variable {autoskeleton} {false};
	#showme {skeletons will no longer autocast}
}
{5}

#ALIAS {noautostore}
{
	#unvariable {autostore};
	#showme {You will no longer autostore anything.}
}
{5}

#ALIAS {noautowoad}
{
	#variable {autowoad} {false};
	#showme {Wood Woad will no longer autocast.}
}
{5}

#ALIAS {{muh|muha|muhah|muhaha|muhahah|muhahahaha}}
{
	#if {"$sex" == "female"}
	{
		emot is surrounded by flickering red flames as her eyes glow a demonic red and she levitates into the air. Poison tipped fangs sprout from her mouth as she issues a maniacal laugh, 'MUHAHAHAHAHAHAHAHA!'
	};
	#else
	{
		emot is surrounded by flickering red flames as his eyes glow a demonic red and he levitates into the air. Poison tipped fangs sprout from his mouth as he issues a maniacal laugh, 'MUHAHAHAHAHAHAHAHA!'
	}
}
{5}

#ALIAS {{p|pu|put} %1 %2}
{
	#variable {container} {%2};
	\put %1 %2
}
{5}

#ALIAS {{swi|swie|swiel|swield} %1}
{
	#variable {stabWeapon} {%1};
	#showme {You will now use the %1 for backstabs.}
}
{5}

#ALIAS {{wi|wie|wiel|wield} %1}
{
	#if {"%1" != "$stabWeapon"}
	{
		#variable {weapon} {%1}
	};
	\wield %1
}
{5}

#ALIAS {^hands %1}
{
	#if {"$burningHands" == "true"}
	{
		c burning hands %1
	};
	#if {"$shockingGrasp" == "true"}
	{
		c shocking grasp %1
	};
	#if {"$sacredTouch" == "true"}
	{
		c sacred touch %1
	};
	#if {"$sickeningTouch" == "true"}
	{
		c sickening touch %1
	}
}
{8}

#ALIAS {^strik %1}
{
	shadow strike %1
}
{8}

#ALIAS {^{ble|bles|bless} %1}
{
	#if {"$bless" == "true"}
	{
		c bless %1
	};
	#else
	{
		#showme {You do not have the spell bless yet.}
	}
}
{8}

#ALIAS {^{bm|bloodm|bloodmi|bloodmis|bloodmist} %1}
{
	#if {"$bloodmist" == "true"}
	{
		c bloodmist %1
	};
	#else
	{
		#showme {You do not have the spell bloodmist yet.}
	}
}
{8}

#ALIAS {^{clb|clbo|clbol|clbolt|clightn|clightni|clightnin|clightning} %1}
{
	#if {"$lightningBolt" == "true"}
	{
		cc lightning bolt %1
	};
	#else
	{
		#showme {You do not have the spell lightning bolt yet.}
	}
}
{8}

#ALIAS {^{clb|clbo|clbol|clbolt|clightn|clightni|clightnin|clightning}$}
{
	#if {"$lightningBolt" == "true"}
	{
		cc lightning bolt
	};
	#else
	{
		#showme {You do not have the spell lightning bolt yet.}
	}
}
{8}

#ALIAS {^{lb|lbo|lbol|lbolt|lightn|lightni|lightnin|lightning} %1}
{
	#if {"$lightningBolt" == "true"}
	{
		c lightning bolt %1
	};
	#else
	{
		#showme {You do not have the spell lightning bolt yet.}
	}
}
{8}

#ALIAS {^{lb|lbo|lbol|lbolt|lightn|lightni|lightnin|lightning}$}
{
	#if {"$lightningBolt" == "true"}
	{
		c lightning bolt
	};
	#else
	{
		#showme {You do not have the spell lightning bolt yet.}
	}
}
{8}

#ALIAS {^{way|wayp|waypo|waypoi|waypoin|waypoint} %1}
{
	#variable {waypoint} {%1};
	\waypoint %1
}
{8}

#ALIAS {{cfb|cf|cfi|cfir|cfire|cfireb|cfireba|cfirebal|cfireball} %1}
{
	#if {"$fireball" == "true"}
	{
		cc fireball %1
	};
	#else
	{
		#showme {You do not have the spell fireball yet.}
	}
}
{8}

#ALIAS {{fb|fireb|fireba|firebal|fireball} %1}
{
	#if {"$fireball" == "true"}
	{
		c fireball %1
	};
	#else
	{
		#showme {You do not have the spell fireball yet.}
	}
}
{8}

#ALIAS {{ib|iceb|icebo|icebol|icebolt} %1}
{
	#if {"$icebolt" == "true"}
	{
		c icebolt %1
	};
	#else
	{
		#showme {You do not have the spell icebolt yet.}
	}
}
{8}

#ALIAS {%.set$}
{
	eqset wear %1set
}
{9}

#ALIAS {^autobloodsacrifice$}
{
	#showme {You will now blood sacrifice corpses automatically};
	#variable {autobloodsacrifice} {true}
}
{9}

#ALIAS {^autobrew$}
{
	noautojunk;
	#variable {autobrew} {true};
	#showme {You will now automatically brew potions using items harvested from corpses.}
}
{9}

#ALIAS {^autobuypractice$}
{
	#showme {You will now automatically spend experience to buy practices.};
	train | grep -i You can train to get a practice | prefix silent_;
	#variable {autobuypractice} {true}
}
{9}

#ALIAS {^autoconsume$}
{
	#showme {Your minions will now consume corpses automatically};
	#variable {autoconsume} {true}
}
{9}

#ALIAS {^autocspam$}
{
	#showme {autocspam enabled.};
	#variable {autocspam} {true}
}
{9}

#ALIAS {^autodream$}
{
	#variable {autodream} {true};
	#showme {Welcome to the world of dreams.}
}
{9}

#ALIAS {^autofleshbeast$}
{
	#variable {autofleshbeast} {true};
	#showme {You will attempt to make a new flesh beast automatically.}
}
{9}

#ALIAS {^autoheal$}
{
	#variable {autoheal} {true};
	#showme {Autoheal is now on.}
}
{9}

#ALIAS {^autohelp$}
{
	#variable {autohelp} {true};
	#showme {You will now see random help files when you sleep.}
}
{9}

#ALIAS {^autojunk$}
{
	noautobrew;
	#variable {autojunk} {true};
	#showme {You will now automatically discard spell components harvested from corpses.}
}
{9}

#ALIAS {^autolevel %i{all|cleric|mage|necromancer|thief|warrior}$}
{
	#script {autolevelClass} {echo "%1" | tr "[:upper:]" "[:lower:]" | awk '{print toupper(substr($0, 1, 1)) substr($0,2)}'};
	#variable {autolevelClass} {$autolevelClass[1]};
	#if {"$autolevelClass" != "All"}
	{
		#showme {You will now level $autolevelClass automatically.}
	};
	#else
	{
		#showme {You will now level all classes automatically}
	}
}
{9}

#ALIAS {^autolevel$}
{
	#if {"$autolevelClass" == "All"}
	{
		#showme {You are leveling your cheapest class automatically.}
	};
	#else
	{
		#showme {You are currently leveling $autolevelClass automatically.}
	}
}
{9}

#ALIAS {^automap$}
{
	#showme {Automap on.};
	#variable {automap} {true};
	#gag {^Map Scale -%*};
	#gag {^You are standing {in|on}%*}
}
{9}

#ALIAS {^autorecall$}
{
	#variable {autorecall} {true};
	#showme {You will automatically recall if you are in awful or pretty hurt.}
}
{9}

#ALIAS {^autoregen$}
{
	#variable {autoregen} {true};
	#showme {You will now regen when your group leader does.}
}
{9}

#ALIAS {^beeps$}
{
	#showme {beeps on};
	#variable {beeps} {true}
}
{9}

#ALIAS {^bin %1}
{
	shadow bind %1
}
{9}

#ALIAS {^bin$}
{
	shadow bind
}
{9}

#ALIAS {^bind %1}
{
	shadow bind %1
}
{9}

#ALIAS {^bind$}
{
	shadow bind
}
{9}

#ALIAS {^brag cap$}
{
	#line {gag};
	cap;
	say My experience cap is $cap exp.
}
{9}

#ALIAS {^brag groupexp$}
{
	exp | prefix silent_;
	#if {&{groupExperience}}
	{
		gt I have gained $groupExperience experience points in this group so far.
	};
	#else
	{
		#showme {Group experience is not being calculated at this time.}
	}
}
{9}

#ALIAS {^brag gt cap$}
{
	#line {gag};
	cap;
	gt My experience cap is $cap exp.
}
{9}

#ALIAS {^brew in %S$}
{
	#showme {Brew container set to %1.};
	#variable {brewContainer} {%1}
}
{9}

#ALIAS {^cap$}
{
	level | tail -1
}
{9}

#ALIAS {^csave$}
{
	#class {gameData} {write} {game_data.tin};
	#showme {saving game_data.tin}
}
{9}

#ALIAS {^fbrew %1}
{
	brew potion focus %1
}
{9}

#ALIAS {^fp %1}
{
	friend post %1
}
{9}

#ALIAS {^get %S %S$}
{
	#if {"$palm" == "true" && "$inBattle" != "true" && "%1" != "all" && "$position" != "sleep"}
	{
		palm %1 %2
	};
	#else
	{
		#send {get %1 %2}
	};
	#if {&{inBattle}}
	{
		#unvariable {inBattle}
	}
}
{9}

#ALIAS {^get %S$}
{
	#if {"$palm" == "true" && "$inBattle" != "true" && "%1" != "all" && "$position" != "sleep"}
	{
		palm %1
	};
	#else
	{
		#send {get %1}
	};
	#if {&{inBattle}}
	{
		#unvariable {inBattle}
	}
}
{9}

#ALIAS {^getup$}
{
	\stand
}
{9}

#ALIAS {^groupexp$}
{
	exp | prefix silent_;
	#if {&{groupExperience}}
	{
		#showme {You have gained $groupExperience experience points in this group so far.}
	};
	#else
	{
		#showme {Group experience is not being calculated at this time.}
	}
}
{9}

#ALIAS {^hands$}
{
	#if {"$burningHands" == "true"}
	{
		c burning hands
	};
	#if {"$shockingGrasp" == "true"}
	{
		c shocking grasp
	};
	#if {"$sacredTouch" == "true"}
	{
		c sacred touch
	};
	#if {"$sickeningTouch" == "true"}
	{
		c sickening touch
	}
}
{9}

#ALIAS {^noautobloodsacrifice$}
{
	#showme {You will no longer blood sacrifice corpses automatically};
	#unvariable {autobloodsacrifice}
}
{9}

#ALIAS {^noautobrew$}
{
	#unvariable {autobrew};
	#showme {You will no longer brew potions.}
}
{9}

#ALIAS {^noautobuypractice$}
{
	#showme {You will no longer automatically buy practices.};
	#unvariable {autobuypractice}
}
{9}

#ALIAS {^noautoconsume$}
{
	#showme {Your minions will no longer consume corpses automatically};
	#unvariable {autoconsume}
}
{9}

#ALIAS {^noautocspam$}
{
	#showme {autocspam disabled.};
	#unvariable {autocspam}
}
{9}

#ALIAS {^noautodream$}
{
	#unvariable {autodream};
	#showme {As you decide to stop dreaming, you hear a snort and think you see the misty form of a nightmare vanishing into the distance.}
}
{9}

#ALIAS {^noautofleshbeast$}
{
	#unvariable {autofleshbeast};
	#showme {You will no longer make flesh beasts automatically.}
}
{9}

#ALIAS {^noautoheal$}
{
	#unvariable {autoheal};
	#showme {Autoheal is now off.}
}
{9}

#ALIAS {^noautohelp$}
{
	#unvariable {autohelp};
	#showme {You will no longer see random help files when you sleep.}
}
{9}

#ALIAS {^noautojunk$}
{
	#unvariable {autojunk};
	#showme {You will no longer automatically discard anything.}
}
{9}

#ALIAS {^noautolevel$}
{
	#showme {You will no longer automatically level anything.};
	#unvariable {autolevelClass}
}
{9}

#ALIAS {^noautomap$}
{
	#showme {Automap off.};
	#unvariable {automap};
	#ungag {^Map Scale -%*};
	#gag {^You are standing {in|on}%*}
}
{9}

#ALIAS {^noautorecall$}
{
	#unvariable {autorecall};
	#showme {You will no automatically recall.}
}
{9}

#ALIAS {^noautoregen$}
{
	#unvariable {autoregen};
	#showme {You will no longer automatically regen when your group leader does.}
}
{9}

#ALIAS {^nobeeps$}
{
	#showme {beeps off};
	#unvariable {beeps}
}
{9}

#ALIAS {^nopfile$}
{
	#unvariable {personalFile};
	#showme {personal file variable cleared.}
}
{9}

#ALIAS {^nospeech$}
{
	#unvariable {speech};
	#showme {speech disabled.}
}
{9}

#ALIAS {^pfile %1}
{
	#variable {personalFile} {%1};
	#class {personal} {read} {$personalFile};
	#showme {loading $personalFile}
}
{9}

#ALIAS {^recast}
{
	#if {&{recast}}
	{
		#foreach {$recast} {spell}
		{
			$spell
		};
		#unvariable {recast}
	}
}
{9}

#ALIAS {^regen$}
{
	eqset wear regen
}
{9}

#ALIAS {^repla%*}
{
	#send {%0 | prefix Replayin_}
}
{9}

#ALIAS {^set{a|b|c|d|e|f|g|h|n|q|r|s|t|v|w|x|y|z} %2}
{
	#macro {\e%1} {%2};
	#showme {alt+%1 has been set to %2.}
}
{9}

#ALIAS {^set{a|b|c|d|e|f|g|h|n|q|r|s|t|v|w|x|y|z}$}
{
	#macro {\e%1}
}
{9}

#ALIAS {^speech$}
{
	#variable {speech} {true};
	#showme {speech enabled.}
}
{9}

#ALIAS {^strik$}
{
	shadow strike
}
{9}

#ALIAS {^strike %1}
{
	shadow strike %1
}
{9}

#ALIAS {^strike$}
{
	shadow strike
}
{9}

#ALIAS {^tank$}
{
	eqset wear tank;
	\tank
}
{9}

#ALIAS {^track %1}
{
	#variable {tracking} {%1};
	#showme {You are now tracking.}
}
{9}

#ALIAS {^track$}
{
	#unvariable {tracking};
	#showme {You are no longer tracking.}
}
{9}

#ALIAS {^unset %S}
{
	#if {"${%1}" == "true"}
	{
		#unvariable {%1};
		#showme {%1 unset}
	};
	#else
	{
		#showme {%1 not found.}
	}
}
{9}

#ALIAS {^vote$}
{
	#if {&{browser}}
	{
		#showme {Launching $browser...};
		#system {$browser 'http://www.mudconnect.com/cgi-bin/member/votelogin.cgi?mud=Alter+Aeon' &> /dev/null &}
	};
	#else
	{
		#showme {You do not have a browser command set, to do so please type browser followed by the browser command you would like to use,  E.G. browser firefox.}
	}
}
{9}

#ALIAS {^x$}
{
	#send {get coins corpse};
	#if {"$consume" == "true"}
	{
		control all consume corpse
	};
	#if {"$bloodSacrifice" == "true"}
	{
		bsac corpse
	};
	sac corpse
}
{9}

#ALIAS {^{aa|login}$}
{
	#if {!&{connected}}
	{
		#session {Alter Aeon} {dentinmud.org} {3010};
		#if {&{name} && "$name" != "Name"}
		{
			$name;
			$password
		};
		#cr
	};
	#else
	{
		#showme {Huh?}
	}
}
{9}

#ALIAS {^{ble|bles|bless}}
{
	#if {"$bless" == "true"}
	{
		c bless
	};
	#else
	{
		#showme {You do not have the spell bless yet.}
	}
}
{9}

#ALIAS {^{bm|bloodm|bloodmi|bloodmis|bloodmist}$}
{
	#if {"$bloodmist" == "true"}
	{
		c bloodmist
	};
	#else
	{
		#showme {You do not have the spell bloodmist yet.}
	}
}
{9}

#ALIAS {^{cfb|cfi|cfir|cfire|cfireb|cfireba|cfirebal|cfireball}$}
{
	#if {"$fireball" == "true"}
	{
		cc fireball
	};
	#else
	{
		#showme {You do not have the spell fireball yet.}
	}
}
{9}

#ALIAS {^{cff|cfiref|cfirefi|cfirefiel|cfirefield}$}
{
	#if {"$firefield" == "true"}
	{
		cc firefield
	};
	#else
	{
		#showme {You do not have the spell firefield yet.}
	}
}
{9}

#ALIAS {^{di|dis|disa|disar|disarm} %1}
{
	#variable {victim} {%1};
	\disarm %1
}
{9}

#ALIAS {^{fam|fame}$}
{
	show fame
}
{9}

#ALIAS {^{fb|fireb|fireba|firebal|fireball}$}
{
	#if {"$fireball" == "true"}
	{
		c fireball
	};
	#else
	{
		#showme {You do not have the spell fireball yet.}
	}
}
{9}

#ALIAS {^{ff|firef|firefi|firefiel|firefield}$}
{
	#if {"$firefield" == "true"}
	{
		c firefield
	};
	#else
	{
		#showme {You do not have the spell firefield yet.}
	}
}
{9}

#ALIAS {^{forg|forge} %1}
{
	c soulforge %1 2.%1
}
{9}

#ALIAS {^{ib|iceb|icebo|icebol|icebolt}$}
{
	#if {"$icebolt" == "true"}
	{
		c icebolt
	};
	#else
	{
		#showme {You do not have the spell icebolt yet.}
	}
}
{9}

#ALIAS {^{loa|load}$}
{
	cap;
	spells;
	#cr;
	#cr;
	#cr;
	#cr;
	experience lost | grep -i you have lost;
	whoami | grep -i tall.;
	skills;
	#cr;
	#cr;
	#cr;
	#cr;
	#cr;
	show stats | prefix silent_;
	show clev | prefix silent_
}
{9}

#ALIAS {^{pracs|practices}$}
{
	show practices
}
{9}

#ALIAS {^{quit|logoff}$}
{
	#unvariable {position};
	#unvariable {recast};
	#unvariable {lastSpell};
	#unvariable {groupExperience};
	#unvariable {groupLeader};
	#unvariable {lastReceivedExp};
	#unvariable {oldExp};
	#unvariable {expGained};
	#class {gameData} {write} {game_data.tin};
	#line {gag};
	set ctrigger off;
	\quit
}
{9}

#ALIAS {^{rest|si|sit}$}
{
	#variable {position} {rest};
	#send {rest};
	show regen | prefix silent_
}
{9}

#ALIAS {^{scan|sca} {d|do|dow|down}$}
{
	\scan | grep -i down
}
{9}

#ALIAS {^{scan|sca} {e|ea|eas|east}$}
{
	\scan | grep -i east
}
{9}

#ALIAS {^{scan|sca} {n|no|nor|north}$}
{
	\scan | grep -i north
}
{9}

#ALIAS {^{scan|sca} {s|so|sou|sout|south}$}
{
	\scan | grep -i south
}
{9}

#ALIAS {^{scan|sca} {u|up}$}
{
	\scan | grep -i up
}
{9}

#ALIAS {^{scan|sca} {w|we|wes|west}$}
{
	\scan | grep -i west
}
{9}

#ALIAS {^{sl|sle|slee|sleep}$}
{
	#variable {position} {sleep};
	#send {sleep};
	show regen | prefix silent_
}
{9}

#ALIAS {^{tee|teet|teeth}$}
{
	show teeth
}
{9}

#ALIAS {^{wa|wak|wake|stan|stand}$}
{
	#unvariable {position};
	#send {%0}
}
{9}

#ALIAS {autorecast}
{
	#variable {autorecast} {true};
	#showme {Some spells will now automatically recast when they drop}
}
{9}

#ALIAS {b %1}
{
	#if {"$faerieFire" == "true"}
	{
		c faerie fire %1
	};
	#variable {victim} {%1};
	#if {&{weapon}}
	{
		remove $weapon
	};
	#if {&{eqshield}}
	{
		remove shield
	};
	wield $stabWeapon;
	#if {"$cloakOfDarkness" == "true"}
	{
		cloak on
	};
	#if {"$hide" == "true"}
	{
		hide
	};
	backstab %1;
	remove $stabWeapon;
	#if {&{weapon}}
	{
		wield $weapon
	};
	#if {&{eqshield}}
	{
		wear shield
	};
	#if {"$cloakOfDarkness" == "true"}
	{
		cloak off
	}
}
{9}

#ALIAS {bgmPlay %1}
{
	#if {!&{volume} || $volume == 0}
	{
		#system {play -q -V0 "sounds/ambiance/terrains/%1.ogg" &> /dev/null &}
	};
	#else
	{
		#system {play -q -V0 "sounds/ambiance/terrains/%1.ogg" gain $volume &> /dev/null &}
	}
}
{9}

#ALIAS {bgmusic}
{
	#variable {bgmusic} {true};
	#showme {Background music is now on.}
}
{9}

#ALIAS {browser %1}
{
	#variable {browser} {%1};
	#showme {OK, browser is now set to $browser.}
}
{9}

#ALIAS {buildwoa{ds|d} %1}
{
	noautobone;
	noautoclay;
	noautowoad;
	noautometal;
	#class {woadbot} {read} {woadbot.tin};
	makewoad %1
}
{9}

#ALIAS {cconf %1}
{
	#if {!&{%1}}
	{
		#showme {%1 false}
	};
	#else
	{
		#showme {%1 $%1}
	}
}
{9}

#ALIAS {facebook}
{
	#variable {facebook} {true};
	#showme {Achievements will now be posted to Facebook.}
}
{9}

#ALIAS {g}
{
	#send {get all corpse}
}
{9}

#ALIAS {junk %1}
{
	drop %1;
	sac %1
}
{9}

#ALIAS {lic}
{
	look in corpse
}
{9}

#ALIAS {noautorecast}
{
	#unvariable {autorecast};
	#showme {Spells will no longer automatically recast.}
}
{9}

#ALIAS {nobgmusic}
{
	#unvariable {bgmusic};
	#unticker {ambiance};
	#unticker {bgMusic};
	#showme {Background music is now off.}
}
{9}

#ALIAS {nofacebook}
{
	#unvariable {facebook};
	#showme {Achievements will no longer be posted to Facebook.}
}
{9}

#ALIAS {notwitter}
{
	#unvariable {twitter};
	#showme {Achievements will no longer be posted to Twitter.}
}
{9}

#ALIAS {p %1}
{
	pickp %1
}
{9}

#ALIAS {play %1 %2}
{
	#if {!&{volume} || $volume == 0}
	{
		#system {play -q -V0 -mix "$(shuf -n 1 -e sounds/%1*wav)" "$(shuf -n 1 -e sounds/%2*wav)" &> /dev/null &}
	};
	#else
	{
		#system {play -q -V0 -mix "$(shuf -n 1 -e sounds/%1*wav)" "$(shuf -n 1 -e sounds/%2*wav)" gain $volume &> /dev/null &}
	}
}
{9}

#ALIAS {play %S}
{
	#if {!&{volume} || $volume == 0}
	{
		#system {play -q -V0 "$(shuf -n 1 -e sounds/%1*wav)" &> /dev/null &}
	};
	#else
	{
		#system {play -q -V0 "$(shuf -n 1 -e sounds/%1*wav)" gain $volume &> /dev/null &}
	}
}
{9}

#ALIAS {repeat %1}
{
	replay | grep -i %1
}
{9}

#ALIAS {rsoc %1}
{
	#script {echo "$(shuf -n 1 -e $socials) %1"}
}
{9}

#ALIAS {rsoc$}
{
	#script {shuf -n 1 -e $socials}
}
{9}

#ALIAS {slay %1 %2}
{
	#variable {victim} {%1};
	#if {&{weapon}}
	{
		remove $weapon
	};
	#if {&{eqshield}}
	{
		remove shield
	};
	wield $stabWeapon;
	#if {"$cloakOfDarkness" == "true"}
	{
		cloak on
	};
	#if {&{stealthyMovement}}
	{
		sneak %2
	};
	#else
	{
		%2
	};
	backstab %1;
	remove $stabWeapon;
	#if {&{eqshield}}
	{
		wear shield
	};
	#if {&{weapon}}
	{
		wield $weapon
	};
	#if {"$cloakOfDarkness" == "true"}
	{
		cloak off
	}
}
{9}

#ALIAS {speechrate %1}
{
	#variable {speechrate} {%1};
	#showme {speech rate is now %1.}
}
{9}

#ALIAS {spell %1}
{
	spells | grep -i %1
}
{9}

#ALIAS {tweet %1}
{
	#if {"$twitter" == "true"}
	{
		#system {ttytter -silent -readline=0 -status="%1" &> /dev/null&}
	}
}
{9}

#ALIAS {twitter}
{
	#variable {twitter} {true};
	#showme {Achievements will now be posted to Twitter.}
}
{9}

#ALIAS {{invi|invit|invite} %1}
{
	#math {invite} {10d10};
	tell %1 Wanna run some exp? I promise I won't get you killed more than $invite times.;
	#unvariable {invite}
}
{9}

#CONFIG           {256 COLORS}  {OFF}
#CONFIG           {AUTO TAB}  {5000}
#CONFIG           {BUFFER SIZE}  {20000}
#CONFIG           {CHARSET}  {ASCII}
#CONFIG           {COMMAND COLOR}  {<078>}
#CONFIG           {COMMAND ECHO}  {ON}
#CONFIG           {CONNECT RETRY}  {15}
#CONFIG           {HISTORY SIZE}  {1000}
#CONFIG           {LOG}  {RAW}
#CONFIG           {PACKET PATCH}  {0.01}
#CONFIG           {REPEAT CHAR}  {!}
#CONFIG           {REPEAT ENTER}  {ON}
#CONFIG           {SCROLL LOCK}  {ON}
#CONFIG           {SPEEDWALK}  {OFF}
#CONFIG           {TINTIN CHAR}  {#}
#CONFIG           {VERBATIM}  {OFF}
#CONFIG           {VERBATIM CHAR}  {\}
#CONFIG           {VERBOSE}  {OFF}
#CONFIG           {WORDWRAP}  {ON}
#EVENT {SESSION CONNECTED}
{
	#read {name.tin};
	#class {gameData} {read} {game_data.tin};
	#variable {connected} {true};
	#variable {loggedIn} {false};
	#script {logFilePath} {date +'log/%Y/%B/%d/'};
	#script {logFileName} {date +'%I_%M%p.log'};
	#system {mkdir -p ${logFilePath[1]}};
	#log {overwrite} {${logFilePath[1]}${logFileName[1]}};
	#if {&{personalFile}}
	{
		#class {personal} {read} {$personalFile};
		#showme {Loading $personalFile}
	};
	#if {"$autocspam" == "true"}
	{
		cspam
	};
	#else
	{
		#class {gameData} {open} {game_data.tin}
	}
}

#EVENT {SESSION DISCONNECTED}
{
	#unvariable {connected}
}

#GAG              {A ball of light flies idly in circles around your head.}
#GAG              {You don't see any of your group members here to split the gold with}
#GAG              {You don't see anything %1 in the corpse of %2}
#GAG              {You don't see anything by that name here.}
#GAG              {You have %1 mana of %2 Max.}
#GAG              {You see nothing in it for you to get.}
#GAG              {^!!SOUND%*}
#GAG              {^%S twitches and starts fidgeting.$}
#GAG              {^(You can only split gold with players, not minions.)$}
#GAG              {^Looks like the corpse of %1 is too damaged for you to use.$}
#GAG              {^None of your minions seem hungry at the moment.$}
#GAG              {^Replayin_Clantell replay$}
#GAG              {^Replayin_Recent channel history$}
#GAG              {^Replayin_Recent tells:$}
#GAG              {^Replayin_Sending activity for channel 'auction'$}
#GAG              {^Stop doing what? You don't seem to be doing anything.$}
#GAG              {^The {corpse|gutted carcass} of%1is no longer suitable for blood sacrifice.$}
#GAG              {^You can only blood sacrifice corpses with blood in them.$}
#GAG              {^You didn't find anything by that name.$}
#GAG              {^You don't see anything named 'coins' in the corpse of %1.$}
#GAG              {^You feel extremely jittery and awake.$}
#GAG              {^You find yourself unable to sit still, gotta keep moving...$}
#GAG              {^You haven't had a recent victory worth shouting about.$}
#GAG              {^You see nothing left to loot from the corpse of %1.$}
#GAG              {^Your collected {dragon teeth|teeth} grow restless.  It would be unwise to collect any more.$}
#GAG              {^kxwt_%*}
#GAG              {^silent_%*}
#GAG              {^{A|An|The} %1 twitches and starts fidgeting.$}
#MACRO {\e+}
{
	#system {cmus-remote -v +10%}
}

#MACRO {\e,}
{
	#if {"$stealth" == "true"}
	{
		sneak south
	};
	#else
	{
		south
	}
}

#MACRO {\e-}
{
	#if {!&{channelBufferIndex} || $channelBufferIndex <= 0}
	{
		#variable {channelBufferIndex} {0}
	};
	#else
	{
		#math {channelBufferIndex} {$channelBufferIndex - 1}
	};
	#showme {Channel buffer set to $channelBuffer[$channelBufferIndex]}
}

#MACRO {\e.}
{
	#if {"$stealth" == "true"}
	{
		sneak southeast
	};
	#else
	{
		southeast
	}
}

#MACRO {\e0}
{
	display_channel $channelBuffer[$channelBufferIndex] $channelBufferIndex 10
}

#MACRO {\e1}
{
	display_channel $channelBuffer[$channelBufferIndex] $channelBufferIndex 1
}

#MACRO {\e2}
{
	display_channel $channelBuffer[$channelBufferIndex] $channelBufferIndex 2
}

#MACRO {\e3}
{
	display_channel $channelBuffer[$channelBufferIndex] $channelBufferIndex 3
}

#MACRO {\e4}
{
	display_channel $channelBuffer[$channelBufferIndex] $channelBufferIndex 4
}

#MACRO {\e5}
{
	display_channel $channelBuffer[$channelBufferIndex] $channelBufferIndex 5
}

#MACRO {\e6}
{
	display_channel $channelBuffer[$channelBufferIndex] $channelBufferIndex 6
}

#MACRO {\e7}
{
	display_channel $channelBuffer[$channelBufferIndex] $channelBufferIndex 7
}

#MACRO {\e8}
{
	display_channel $channelBuffer[$channelBufferIndex] $channelBufferIndex 8
}

#MACRO {\e9}
{
	display_channel $channelBuffer[$channelBufferIndex] $channelBufferIndex 9
}

#MACRO {\e<}
{
	#if {"$stealth" == "true"}
	{
		sneak down
	};
	#else
	{
		down
	}
}

#MACRO {\e=}
{
	#if {!&{channelBufferIndex} || $channelBufferIndex >= 5}
	{
		#variable {channelBufferIndex} {5}
	};
	#else
	{
		#math {channelBufferIndex} {$channelBufferIndex + 1}
	};
	#showme {Channel buffer set to $channelBuffer[$channelBufferIndex]}
}

#MACRO {\eB}
{
	#system {cmus-remote -n}
}

#MACRO {\eC}
{
	#system {cmus-remote -u}
}

#MACRO {\eG}
{
	#if {&{friendNameEnter}}
	{
		#script {echo "friend post $(shuf -n 1 -e "Hello" "Greetings" "Hey" "Hi" "Howdy") $friendNameEnter!"}
	};
	#else
	{
		#showme {You have no one to greet.}
	}
}

#MACRO {\eI}
{
	#if {"$stealth" == "true"}
	{
		sneak up
	};
	#else
	{
		up
	}
}

#MACRO {\eM}
{
	#if {!&{musicURL}}
	{
		#variable {musicURL} {http://www.last.fm/search?q=$artist%%2B$title}
	};
	#if {!&{musicProvider}}
	{
		#variable {musicProvider} {Last.fm}
	};
	#script {echo "music $(shuf -n 1 -e "Now playing" "Listening to" "*Breaks out the airguitar! It's") $(scripts/music.sh $musicURL $musicProvider)"}
}

#MACRO {\eOQ}
{
	control $lastRaisedMinion protect
}

#MACRO {\eOR}
{
	control $lastRaisedMinion assist
}

#MACRO {\eR}
{
	#system {cmus-remote -R};
	#script {echo "#showme {Cmus $(cmus-remote -Q | grep 'repeat ' | sed 's/true/on/g' | sed 's/false/off/g' | sed 's/set //').}"}
}

#MACRO {\eS}
{
	#system {cmus-remote -S};
	#script {echo "#showme {Cmus $(cmus-remote -Q | grep 'shuffle' | sed 's/true/on/g' | sed 's/false/off/g' | sed 's/set //').}"}
}

#MACRO {\eU}
{
	#script {echo "#showme {Playing: $(scripts/music.sh false)}"}
}

#MACRO {\eV}
{
	#system {cmus-remote -s}
}

#MACRO {\eX}
{
	#system {cmus-remote -p}
}

#MACRO {\eZ}
{
	#system {cmus-remote -r}
}

#MACRO {\e[18~}
{
	#if {$volume <= -40}
	{
		#variable {volume} {-40}
	};
	#else
	{
		#math {volume} {$volume - 2}
	};
	play new-volume
}

#MACRO {\e[19~}
{
	#if {$volume >= 0}
	{
		#variable {volume} {0}
	};
	#else
	{
		#math {volume} {$volume + 2}
	};
	play new-volume
}

#MACRO {\e[1;3C}
{
	#if {!&{channelBufferIndex} || $channelBufferIndex >= 5}
	{
		#variable {channelBufferIndex} {5}
	};
	#else
	{
		#math {channelBufferIndex} {$channelBufferIndex + 1}
	};
	#showme {Channel buffer set to $channelBuffer[$channelBufferIndex]}
}

#MACRO {\e[1;3D}
{
	#if {!&{channelBufferIndex} || $channelBufferIndex <= 0}
	{
		#variable {channelBufferIndex} {0}
	};
	#else
	{
		#math {channelBufferIndex} {$channelBufferIndex - 1}
	};
	#showme {Channel buffer set to $channelBuffer[$channelBufferIndex]}
}

#MACRO {\e\}
{
	get $battleScroll $container;
	use $battleScroll
}

#MACRO {\e\x7B}
{
	#system {cmus-remote -k -5}
}

#MACRO {\e\x7D}
{
	#system {cmus-remote -k +5}
}

#MACRO {\e_}
{
	#system {cmus-remote -v -10%}
}

#MACRO {\ei}
{
	#if {"$stealth" == "true"}
	{
		sneak north
	};
	#else
	{
		north
	}
}

#MACRO {\ej}
{
	#if {"$stealth" == "true"}
	{
		sneak west
	};
	#else
	{
		west
	}
}

#MACRO {\ek}
{
	enter portal
}

#MACRO {\el}
{
	#if {"$stealth" == "true"}
	{
		sneak east
	};
	#else
	{
		east
	}
}

#MACRO {\em}
{
	#if {"$stealth" == "true"}
	{
		sneak southwest
	};
	#else
	{
		southwest
	}
}

#MACRO {\eo}
{
	#if {"$stealth" == "true"}
	{
		sneak northeast
	};
	#else
	{
		northeast
	}
}

#MACRO {\eu}
{
	#if {"$stealth" == "true"}
	{
		sneak northwest
	};
	#else
	{
		northwest
	}
}

#PATHDIR          {d}  {u}  {32}
#PATHDIR          {e}  {w}  {2}
#PATHDIR          {n}  {s}  {1}
#PATHDIR          {ne}  {sw}  {3}
#PATHDIR          {nw}  {se}  {9}
#PATHDIR          {s}  {n}  {4}
#PATHDIR          {se}  {nw}  {6}
#PATHDIR          {sw}  {ne}  {12}
#PATHDIR          {u}  {d}  {16}
#PATHDIR          {w}  {e}  {8}
#PROMPT           {<%dhp %dm %dmv %dac> %5 <%6>$}           {%0}  {1}
#PROMPT           {<%dhp %dm %dmv>}  {%0}  {1}
#PROMPT           {^HP%*}  {%0}  {1}
#SUBSTITUTE       {%*}  { %0}  {1}
#SUBSTITUTE       {^Replayin_%1}  {%1}  {1}
#SUBSTITUTE       {MOV_REGEN}  {MOVE_REGEN}  {5}
#SUBSTITUTE       {^%S gives you 1 gold coins.$}          {%1 gives you 1 gold coin.}  {5}
#SUBSTITUTE       {^You are now wearing set '%S'.$}             {You are now wearing '%1'.}  {5}
#SUBSTITUTE       {tracking_[%1] }  {}  {5}
#VARIABLE         {channelBuffer}  {{0}{all}{1}{auction}{2}{ct}{3}{friends}{4}{grouptells}{5}{tells}}
#VARIABLE         {lastHpAlert}  {}
#VARIABLE         {socials}  {"ack" "agree" "ahha" "angel" "apologize" "argh" "arr" "babble" "backslap" "bahumbug" "bap" "barf" "bark" "beam" "bear" "beckon" "beer" "beg" "bellyache" "bkiss" "blah" "blarg" "blink" "blog" "blonde" "blush" "boggle" "bonk" "boogie" "bop" "bored" "boss" "bounce" "bow" "brb" "brit" "burp" "button" "bye" "cackle" "caress" "cartwheel" "cheer" "chip" "chortle" "chuckle" "clap" "code" "coffee" "coinflip" "comfort" "confused" "cough" "cower" "cringe" "cry" "cube" "cuddle" "curl" "curse" "curtsy" "dance" "daydream" "devil" "discodance" "doh!" "drool" "drunk" "duck" "eegrin" "eemo" "egrin" "embrace" "eyebrow" "facepalm" "faint" "fandango" "fart" "flex" "flip" "flirt" "flush" "flutter" "fondle" "freak" "fremen" "french" "frown" "ftf" "gamlin" "gasp" "gauntlet" "giggle" "glare" "goat" "goddamnit" "gorilla" "goth" "grab" "greet" "grimace" "grin" "groan" "grope" "growl" "grumble" "grunt" "gurgle" "hack" "hair" "handshake" "hate" "headbang" "headlock" "heil" "hiccup" "highfive" "hiss" "hmm" "honk" "hop" "howl" "hrm" "hug" "huge" "hum" "hump" "hurf" "innocent" "insane" "island" "jedi" "jello" "jigg" "kanook" "kiss" "kneel" "lag" "lalala" "laugh" "laundry" "lick" "make" "meow" "miss" "mmk" "mml" "moan" "mole" "moon" "mooo" "mutter" "nanook" "nerd" "nibble" "ninethousand" "nod" "noodle" "nowthan" "nudge" "nuzzle" "ogg" "orly" "oz" "pace" "pancake" "pant" "pat" "patriot" "peck" "peer" "pervert" "pet" "pie" "pimp" "pinch" "pointat" "poke" "ponder" "pounce" "pout" "powertrip" "prance" "preach" "propose" "protectinate" "puke" "punt" "purr" "putter" "raa" "raindance" "ranko" "raspberry" "ready" "redneck" "ribble" "rice" "rofl" "roll" "rose" "ruffle" "rutroh" "salute" "sbomb" "scoff" "scold" "scowl" "scratch" "scream" "scuffle" "scuttle" "seppuku" "shag" "shake" "shame" "shhh" "shi" "ver" "shoo" "shrug" "shudder" "shun" "sigh" "sing" "sith" "skip" "slam" "slap" "smack" "smile" "smirk" "smoke" "smooch" "snap" "snarl" "sneer" "sneeze" "snicker" "sniff" "snifle" "snod" "snore" "snort" "snowball" "snuggle" "spammm" "spank" "spin" "spit" "spock" "squat" "ssnod" "stalk" "stare" "steam" "stefen" "stomp" "stoned" "stretch" "strip" "strut" "suicide" "suspect" "tackle" "tapp" "thank" "threaten" "tickles" "tmi" "torture" "tweak" "twiddle" "twirl" "twitch" "uh" "valley" "vegetate" "view" "violin" "waffles" "wave" "wedgie" "whap" "whimper" "whine" "whistle" "whittle" "wibble" "wiggle" "willy" "wince" "wink" "worship" "wrestle" "wrinkle" "wrist" "wtf" "xxp" "yawn" "zerbert"}
