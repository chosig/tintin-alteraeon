#ACTION {%1 has %2 of %3 hitpoints.$}
{
	#if {"$autoheal" == "true"}
	{
		#if {%2 <= %3 / 3}
		{
			#if {"%1" == "You"}
			{
				h
			};
			#else
			{
				h %1
			}
		}
	}
}
{1}

#ACTION {^PANIC!!  You couldn't escape!$}
{
	run
}
{1}

#ACTION {^You are drowning!$}
{
	#if {"$waterBreathing" == "true"}
	{
		c water breathing
	}
}
{1}

#ACTION {^You are in an awful condition!$}
{
	#if {"$autorecall" == "true"}
	{
		#if {$currentMana >= 15 && "$wordOfRecall" == "true"}
		{
			.
		};
		#else
		{
			/
		}
	}
}
{1}

#ACTION {^You are rescued from certain death by %1!}
{
	a
}
{1}

#ACTION {^You fail the rescue!}
{
	\!res
}
{1}

#ACTION {^You struggle desparately for air to breathe!$}
{
	#if {"$waterBreathing" == "true"}
	{
		c water breathing
	}
}
{1}

#ACTION {^You struggle for air but find none!$}
{
	#if {"$waterBreathing" == "true"}
	{
		c water breathing
	}
}
{1}

#ACTION {^silent_You have lost %1 experience points so far due to deaths.$}
{
	#variable {lostExp} {%1}
}
{1}

#ACTION {%1 begins trying to pick %2...$}
{
	#if {"%1" == "$groupLeader" && "$pickLocks" == "true"}
	{
		#regexp {%2} {{doors|door|gates|gate|portcullis|trapdoor}} {pick &1};
		#else
		{
			#regexp {%2} {{.*} {.*}} {pick &2};
			#else
			{
				pick %2
			}
		}
	}
}
{5}

#ACTION {%1is mortally wounded, and will die soon if not aided.$}
{
	#if {"$soulsteal" == "true"}
	{
		#if {"$lastSoulSteal" != "%1"}
		{
			c soulsteal
		};
		#variable {lastSoulSteal} {%1}
	}
}
{5}

#ACTION {^A ghoul bites %1 with diseased, razor sharp teeth!$}
{
	play ghoul-attack
}
{5}

#ACTION {^A ghoul jumps at %1 clawing and biting!$}
{
	play ghoul-attack
}
{5}

#ACTION {^A ghoul rips and tears into %1 with filthy, diseased claws!$}
{
	play ghoul-attack
}
{5}

#ACTION {^A zombie gnaws hungrily on %1 with filthy, rotten teeth.$}
{
	play ghoul-attack
}
{5}

#ACTION {^The light above the wizard's shop flickers for an instant, looks like it needs maintenance.$}
{
	play wizard-shop-light
}
{5}

#ACTION {^You are %1, and currently %2 tall.$}
{
	#variable {sex} {%1}
}
{5}

#ACTION {^You are now a group member.$}
{
	#variable {groupExperience} {0}
}
{5}

#ACTION {^You do your best to explain to %1 that it was an honest mistake.$}
{
	#script {i} {echo "%1" | rev | cut -d " " -f 1 | rev};
	#delay {0.1} {#script {echo "talk ${i[1]} $($shuf -n 1 -e 'honest! I was only trying to tickle your balls!' 'I just wanted to scratch and sniff!')"}}
}
{5}

#ACTION {^You do your best to explain to %1 that you didn't do it.$}
{
	#script {i} {echo "%1" | rev | cut -d " " -f 1 | rev};
	#delay {0.1} {#script {echo "talk ${i[1]} $($shuf -n 1 -e 'honest! I was only trying to tickle your balls!' 'I just wanted to scratch and sniff!')"}}
}
{5}

#ACTION {^You fail the rescue!$}
{
	\!res
}
{5}

#ACTION {^You find yourself too weak to use %1.$}
{
	#variable {rewield} {true};
	eq | grep wielded | prefix silent_
}
{5}

#ACTION {^You have been removed from the group.$}
{
	groupexp;
	#unvariable {groupexperience}
}
{5}

#ACTION {^You have {quite a few|big nasty} {wounds and scratches|wounds}.$}
{
	#if {"$autoheal" == "true"}
	{
		h
	}
}
{5}

#ACTION {^You hear the loud -clang- *CLANG* of a hammer on anvil to the north.$}
{
	play hammer-on-anvil
}
{5}

#ACTION {^[event] The pumpkin cannon operator: %1 shot a pumpkin a distance of %2 feet %3!$}
{
	#if {"%1" == "%i$name"}
	{
		#variable {pumpkinCannonFeet} {%2};
		#variable {pumpkinCannonLocation} {%3}
	}
}
{5}

#ACTION {^silent_Necromancer remaining: %1/%2}
{
	#showme {You have %1 of %2 control points remaining.}
}
{5}

#ACTION {^silent_You must have an empty liquid container to brew anything in.$}
{
	empty $brewContainer | prefix silent_;
	brew p i | prefix silent_
}
{5}

#ACTION {^silent_Your brew%*}
{
	#if {"$autobrew" == "true"}
	{
		empty $brewContainer | prefix silent_
	}
}
{5}

#ACTION {^silent_wielded     - $}
{
	#unvariable {weapon}
}
{5}

#ACTION {^silent_Your levels are:  Ma %1  Cl %2  Th %3  Wa %4  Nc %5}
{
	#variable {mageLevel} {%1};
	#variable {clericLevel} {%2};
	#variable {thiefLevel} {%3};
	#variable {warriorLevel} {%4};
	#variable {necromancerLevel} {%5}
}
{7}

#ACTION {%1 {reels|reel} in %2 line and {recasts|recast} it.$}
{
	play fishing-cast
}
{8}

#ACTION {^Yo%1miss%2{tonberry|moogle}.$}
{
	play ff-miss
}
{8}

#ACTION {^You are already sound asleep!$}
{
	#if {&{autohelp}}
	{
		help random
	};
	#elseif {"$autodream" == "true"}
	{
		dream
	}
}
{8}

#ACTION {^You are awakened by the noise.$}
{
	#delay {3} {\sleep}
}
{8}

#ACTION {^You go to sleep.$}
{
	#if {&{autohelp}}
	{
		help random
	};
	#elseif {"$autodream" == "true"}
	{
		dream
	}
}
{8}

#ACTION {^You now have %1 combat points you can spend.$}
{
	#variable {cp} {%1}
}
{8}

#ACTION {^{A small tonberry|a small tonberry|the Master Tonberry}'s {hack|tail} %1 %2{!|.}$}
{
	#if {"%1" != "misses"}
	{
		play ff-hit1
	};
	#else
	{
		play ff-miss
	}
}
{8}

#ACTION {^{Fats the moogle|A warrior moogle|a warrior moogle|The moogle guard|the moogle guard|Stripe the moogle|The librarian moogle|the librarian moogle|A tan moogle|a tan moogle|Bert the moogle|A white moogle|a white moogle|A gray moogle|a gray moogle|A baby moogle|a baby moogle|An injured moogle|an injured moogle|Maria the water faerie|The soul faerie|the soul faerie}'s %1 %2 %3{!|.}$}
{
	#if {"%2" != "misses"}
	{
		#if {1d2 == 2}
		{
			play ff-hit2
		};
		#else
		{
			play ff-hit1
		}
	};
	#else
	{
		play ff-miss
	}
}
{8}

#ACTION {%1 %S {arrived|into view}.$}
{
	#if {"$autokill" == "true" && !&{inBattle} && $currentHp > $maxHp / 2 && $currentMana > $maxMana / 3}
	{
		#regexp {%1} {{.*} {.*}} {kill &2}
	}
}
{9}

#ACTION {%1 (unique)$}
{
	play unique
}
{9}

#ACTION {%1 cleaves through {its|her|his} enemies!$}
{
	play cleave
}
{9}

#ACTION {%1 hook gets caught, forcing {him|her|it} to break the line.$}
{
	play fish-line-break
}
{9}

#ACTION {%1 is ready to go, but you would be left behind!$}
{
	stand
}
{9}

#ACTION {%1 seems to have dropped %2!  You'll surely return it later.$}
{
	play pickpocket
}
{9}

#ACTION {%1 spell rips up out of the ground and explodes in a harmless shower of frost.$}
{
	play frostbite-harmless
}
{9}

#ACTION {%1 {gets|get} a bite, and after a little effort {you manage|manages} to reel in %4.$}
{
	play catch-fish;
	#if {"$autojunk" == "true"}
	{
		#regexp {%4} {{.*} {.*}} {junk &2}
	}
}
{9}

#ACTION {%1 {puts|put} one end of %1 to the ground and {begins casting|begin the spell}.$}
{
	play frostbite-launch
}
{9}

#ACTION {%1 {reels|reel} in %3.$}
{
	play catch-fish;
	#regexp {%3} {{.*} {.*}} {#if {"&2" != "{bushes|while}" && "$autojunk" == "true"} {junk &2};#if {"&2" == "{bushes|while}"} {#delay {1d3} {\!fis}}}
}
{9}

#ACTION {%1 {struggles|struggle} with the spell, and the line of frost zips randomly across the ground...$}
{
	#math {leftChannel} {1d9};
	#math {rightChannel} {1d9};
	#system {play -qn -V0 synth $($shuf -n 1 -e "wh" "pi" "tp" ) $($shuf -n 1 -e "flanger" "phaser 0.8 0.74 0.5 0.4 0.5") vol 0.5 remix v0.$leftChannel v0.$rightChannel fade 0 1.19 0.2 &}
}
{9}

#ACTION {%1 {throws out a line and starts|start} fishing.$}
{
	play fishing-cast
}
{9}

#ACTION {%1 {traces|trace} fiery glowing symbols in the {air before you|air}...$}
{
	#system {play -qn -V0 synth 00:00:02 $($shuf -n 1 -e "pi" "br") 60 synth $($shuf -n 1 -e "wh" "pi") fmod 60.25 vol 0.2 gain $volume &> /dev/null &}
}
{9}

#ACTION {%1 {traces|trace} symbols in the air, which briefly spark and crackle...$}
{
	#system {play -qn -V0 synth 00:00:02 $($shuf -n 1 -e "sq" "exp" "tri") 60 synth $($shuf -n 1 -e "sq" "exp") fmod 60.25 vol -.1 gain $volume &> /dev/null &}
}
{9}

#ACTION {%1 {traces|trace} symbols of power, momentarily leaving trails of frost hanging in the air...$}
{
	#system {play -qn -V0 synth 2 $($shuf -n 1 -e "wh" "pi" "tp" ) $($shuf -n 1 -e "flanger" "phaser 0.8 0.74 0.5 0.4 0.5") vol 0.2 gain $volume &> /dev/null &}
}
{9}

#ACTION {^       You receive a combat point!$}
{
	#delay {0.2} {#script {echo -n "gt "; $shuf -e -n 1 "I am Cornholio! I got CP for my bunghole!" "CP!" "I am Cornholio! My people they have much CP!" "Een thees battle, there was CP for my bunghole!" "My bunghole, it goes, 'blah blah blah pffft blah! CP!'" "I am Cornholio! You will give me all your Hoolio! and your CP!" "I done did get me one of them there combat points. I now have $cp available to spend! Woohoo!" "CPwn!"}}
}
{9}

#ACTION {^%S goes to sleep.}
{
	#if {&{autoregen} && &{groupLeader} && "%1" == "$groupLeader"}
	{
		sleep
	}
}
{9}

#ACTION {^%S sits down and rests.$}
{
	#if {&{autoregen} && &{groupLeader} && "%1" == "$groupLeader"}
	{
		rest
	}
}
{9}

#ACTION {^%S stops resting, and stands up.$}
{
	#if {&{autoregen} && &{groupLeader} && "%1" == "$groupLeader" && &{position}}
	{
		stand
	}
}
{9}

#ACTION {^A %1 soulstone disappears in a puff of smoke, and you hear demonic laughter all around you.$}
{
	play demonic-laughter
}
{9}

#ACTION {^A blood red winged demon explodes in fine haze of red mist!$}
{
	play bloodmist-death
}
{9}

#ACTION {^A dark mist fills the room, and you suddenly can't breathe!$}
{
	play dying-breath-release
}
{9}

#ACTION {^A dimly lit cavern$}
{
	set ctrigger on | prefix silent_;
	set msp on | prefix silent_;
	#showme {Pulseaudio does not work well with background music. for this reason it has been disabled by default. If you are not using pulseaudio, you can enable background music by typing bgmusic and turn it off again by typing nobgmusic.}
}
{9}

#ACTION {^A fissure opens up in the ground beneath a %1 soulstone and swallows it up!$}
{
	play demonic-laughter
}
{9}

#ACTION {^A magical hammer disappears in a blinding flash of light! (worn by you)}
{
	#if {"$spiritHammer" == "true" && "$autorecast" == "true"}
	{
		c spirit
	}
}
{9}

#ACTION {^A shadow fiend has left the group.$}
{
	play shadow-fiend-leave
}
{9}

#ACTION {^A small clawed hand reaches up through the ground, grabs a %1 soulstone, and vanishes.$}
{
	play demonic-laughter
}
{9}

#ACTION {^A white line of frost zips across the ground away from %1 staff%2.$}
{
	#system {play -qn -V0 synth $($shuf -n 1 -e "wh" "pi" "tp" ) $($shuf -n 1 -e "flanger" "phaser 0.8 0.74 0.5 0.4 0.5") vol 0.2 fade 0 1.19 0.3 gain $volume &> /dev/null &}
}
{9}

#ACTION {^After a big fight, %1 {reels|reel} in %3.$}
{
	play catch-fish;
	#if {"$autojunk" == "true"}
	{
		#regexp {%3} {{.*} {.*}} {junk &2}
	}
}
{9}

#ACTION {^It {starts|is} raining.$}
{
	play rain
}
{9}

#ACTION {^Neebla encourages you to consider converting to Os.$}
{
	#script {echo "emot encourages Neebla to $($shuf -n 1 -e "shut the hell up" "go straight to hell" "'pull my finger'" "attempt reproduction with an electrical outlet")!"}
}
{9}

#ACTION {^Reconnecting.$}
{
	set msp on | prefix silent_;
	set ctrigger on | prefix silent_;
	#cursor {echo} {on};
	set telnetga off | prefix silent_;
	lecho tintin++ pack by Storm Dragon: http://stormdragon.us/?p=256;
	#variable {loggedIn} {true}
}
{9}

#ACTION {^Sleep while fighting?  Are you mad?$}
{
	#unvariable {position}
}
{9}

#ACTION {^Someone steps on you, and you awake to see warriors locked in mortal combat!$}
{
	#unvariable {position}
}
{9}

#ACTION {^The %1 line of frost zips randomly across the ground...$}
{
	#math {leftChannel} {1d9};
	#math {rightChannel} {1d9};
	#system {play -qn -V0 synth $($shuf -n 1 -e "wh" "pi" "tp" ) $($shuf -n 1 -e "flanger" "phaser 0.8 0.74 0.5 0.4 0.5") vol 0.5 remix v0.$leftChannel v0.$rightChannel fade 0 1.19 0.2 &}
}
{9}

#ACTION {^The Master Tonberry is DEAD!$}
{
	play ff-boss-death
}
{9}

#ACTION {^The blade splits down the red lines and shatters, leaving behind oddly bloody fragments that seem to vanish when %1 not looking at them. (worn by you)$}
{
	#if {"$boneBlade" == "true"}
	{
		#if {!&{inBattle}}
		{
			c bone blade
		};
		#else
		{
			Add_Cast bone blade
		}
	}
}
{9}

#ACTION {^The bones splinter and shatter, leaving behind only broken pieces.$}
{
	play bone-guardian-death
}
{9}

#ACTION {^The fish is too big for your line, and it snaps!$}
{
	play fish-line-break
}
{9}

#ACTION {^The gods penalize you for botting!$}
{
	play attention
}
{9}

#ACTION {^The physical reserve deep within you feels replenished.$}
{
	#unvariable {exhausted}
}
{9}

#ACTION {^You add A %1 to your group.$}
{
	#if {"%1" == "zombie" || "%1" == "ghoul" || "%1" == "mummy" || "%1" == "vampire"}
	{
		variable lastRaisedMinion %1 | prefix silent_
	}
}
{9}

#ACTION {^You are already following %1.$}
{
	#variable {groupLeader} {%1}
}
{9}

#ACTION {^You are awakened by %1.$}
{
	#unvariable {position}
}
{9}

#ACTION {^You are now wearing set '%1'.$}
{
	show stats | prefix silent_;
	show clev | prefix silent_
}
{9}

#ACTION {^You are pretty hurt.$}
{
	#if {"$autorecall" == "true"}
	{
		#if {$currentMana >= 15 && "$wordOfRecall" == "true"}
		{
			.
		};
		#else
		{
			/
		}
	}
}
{9}

#ACTION {^You can't rest while fighting!$}
{
	#unvariable {position}
}
{9}

#ACTION {^You can't sleep here, there's a battle going on!$}
{
	#unvariable {position}
}
{9}

#ACTION {^You end up with a stinky, nasty mess, but nothing useful.}
{
	empty $brewContainer
}
{9}

#ACTION {^You follow %S %S.$}
{
	#if {"$pathing" == "true"}
	{
		Add_Direction %2
	}
}
{9}

#ACTION {^You gain a practice!$}
{
	play train-practice
}
{9}

#ACTION {^You guide the spell directly toward %1!$}
{
	#system {play -qn -V0 synth $($shuf -n 1 -e "wh" "pi" "tp" ) $($shuf -n 1 -e "flanger" "phaser 0.8 0.74 0.5 0.4 0.5") vol 0.2 fade 0 1.19 0.3 gain $volume &> /dev/null &}
}
{9}

#ACTION {^You happen to find %d gold coins, how fortunate!$}
{
	play pickpocket
}
{9}

#ACTION {^You receive %1 gold coins for your sacrifice.}
{
	split %1
}
{9}

#ACTION {^You start following %1.$}
{
	#variable {groupLeader} {%1}
}
{9}

#ACTION {^You stop following %1.$}
{
	exp | prefix silent_;
	#unvariable {groupLeader};
	#unvariable {groupExperience}
}
{9}

#ACTION {^You stop using%*}
{
	show stats | prefix silent_;
	show clev | prefix silent_;
	eq | grep wielded | prefix silent_
}
{9}

#ACTION {^You suddenly see your mistake, reverse the incantation and sacrifice a %1 soulstone.$}
{
	play demonic-laugh
}
{9}

#ACTION {^You summon A shadow fiend, and your offering of %1 is accepted.$}
{
	play summon-shadow-fiend
}
{9}

#ACTION {^You taunt %1, and {she|he|it} attacks you!$}
{
	play taunt
}
{9}

#ACTION {^You try, but the blood fever remains just out of your reach!$}
{
	berserk
}
{9}

#ACTION {^You {decide to reel in your line and take a break for a while|finish reeling in your line and stop fishing|are no longer fishing}.$}
{
	play stop-fishing
}
{9}

#ACTION {^You {hold|wear|wield}%*}
{
	show stats | prefix silent_;
	show clev | prefix silent_
}
{9}

#ACTION {^Your skin tingles as you pass through the magical barrier.$}
{
	play ff-barrier
}
{9}

#ACTION {^Your {chr|con|dex|int|str|wis} increases%*}
{
	show stats | prefix silent_
}
{9}

#ACTION {^mobrepop_%1->%2}
{
	#unvariable {mobRepop};
	#showme {%1->%2};
	play repop
}
{9}

#ACTION {^silent_In order to empty it, you must add '-force' to the end of your command.$}
{
	noautobrew;
	#showme {There was a problem with autobrew, it has been disabled. Please correct the issue and renable autobrew when the problem is resolved.}
}
{9}

#ACTION {^silent_You are casting at level %1 mage, level %2 cleric, level %3 necromancer%*}
{
	#if {&{mageClev} && $mageClev != %1}
	{
		#showme {You are now casting at level %1 mage.}
	};
	#if {&{clericClev} && $clericClev != %2}
	{
		#showme {You are now casting at level %2 cleric.}
	};
	#if {&{necromancerClev} && $necromancerClev != %3}
	{
		#showme {You are now casting at level %3 necromancer.}
	};
	#variable {mageClev} {%1};
	#variable {clericClev} {%2};
	#variable {necromancerClev} {%3}
}
{9}

#ACTION {^silent_You currently gain %1 hitpoints, %2 mana, and %3 movement while {standing|sleeping|sitting}.$}
{
	#math {hpRegenTime} {($maxHp - $currentHp) / %1};
	#math {mnRegenTime} {($maxMana - $currentMana) / %2};
	#math {mvRegenTime} {($maxMv - $currentMv) / %3};
	#delay {0.1} {#variable {regenTime} {$hpRegenTime};#if {$mnRegenTime > $regenTime}{#variable {regenTime} {$mnRegenTime}};#if {$mvRegenTime > $regenTime}{#variable {regenTime} {$mvRegenTime}};#if {$regenTime > 0}{#showme {Approximately $regenTime ticks until regeneration is complete.}}}
}
{9}

#ACTION {^silent_You have %1/%2 str, %3/%4 int, %5/%6 wis, %7/%8 dex, %9/%10 con, and %11/%12 chr.$}
{
	#if {&{strBonus} && $strBonus != %1}
	{
		#showme {You now have %1 of %2 strength.}
	};
	#if {&{intBonus} && $intBonus != %3}
	{
		#showme {You now have %3 of %4 intelligence.}
	};
	#if {&{wisBonus} && $wisBonus != %5}
	{
		#showme {You now have %5 of %6 wisdom.}
	};
	#if {&{dexBonus} && $dexBonus != %7}
	{
		#showme {You now have %7 of %8 dexterity.}
	};
	#if {&{conBonus} && $conBonus != %9}
	{
		#showme {You now have %9 of %10 constitution.}
	};
	#if {&{chrBonus} && $chrBonus != %11}
	{
		#showme {You now have %11 of %12 charisma.}
	};
	#variable {strBonus} {%1};
	#variable {str} {%2};
	#variable {intBonus} {%3};
	#variable {int} {%4};
	#variable {wisBonus} {%5};
	#variable {wis} {%6};
	#variable {dexBonus} {%7};
	#variable {dex} {%8};
	#variable {conBonus} {%9};
	#variable {con} {%10};
	#variable {chrBonus} {%11};
	#variable {chr} {%12}
}
{9}

#ACTION {^silent_{Cleric|Mage|Necromancer|Thief|Warrior} %2 You can level!$}
{
	#if {"$autolevelClass" == "All" && !&{justLeveled}}
	{
		level %1;
		#variable {justLeveled} {true};
		#delay {15} {#unvariable {justLeveled}}
	};
	#if {"$autolevelClass" == "%1" && !&{justLeveled}}
	{
		level $autolevelClass;
		#variable {justLeveled} {true};
		#delay {15} {#unvariable {justLeveled}}
	}
}
{9}

#ACTION {^{Fats the moogle|A warrior moogle|The moogle guard|Stripe the moogle|The librarian moogle|A tan moogle|Bert the moogle|A white moogle|A gray moogle|A baby moogle|An injured moogle|A small tonberry|Maria the water faerie|The soul faerie} is DEAD!$}
{
	play ff-death
}
{9}

#ACTION {^{Silent_|You} end up with a stinky, nasty mess, but no magic potion.}
{
	empty $brewContainer
}
{9}

#ACTION {^{Something REALLY big catches your line, and breaks it!|Your hook gets stuck on something, and you have to break the line.}$}
{
	play fish-line-break
}
{9}

#ACTION {^{silent_You|You} can train to get a practice, at a cost of %d experience each.$}
{
	#variable {buyPracticeExperience} {%2}
}
{9}

#ALIAS {skill %1}
{
	skills | grep -i %1
}
{(}

#ALIAS {^{fl|fle|flee}$}
{
	run
}
{1}

#ALIAS {h}
{
	#if {"$breathOfLife" == "true"}
	{
		#variable {healSpell} {breath of life}
	};
	#elseif {"$heal" == "true"}
	{
		#variable {healSpell} {heal}
	};
	#elseif {"$cureCriticalWounds" == "true"}
	{
		#variable {healSpell} {cure critical wounds}
	};
	#elseif {"$cureSeriousWounds" == "true"}
	{
		#variable {healSpell} {cure serious wounds}
	};
	#else
	{
		#variable {healSpell} {cure light wounds}
	};
	c $healSpell
}
{1}

#ALIAS {^1$}
{
	#if {"$loggedIn" == "false"}
	{
		#cursor {echo} {on};
		set ctrigger on | prefix silent_;
		set msp on | prefix silent_;
		#send {1};
		set telnetga off | prefix silent_;
		lecho tintin++ pack by Storm Dragon: http://stormdragon.us/?p=256;
		%connect cowsay | prefix silent_;
		#variable {loggedIn} {true}
	};
	#else
	{
		#send {1}
	}
}
{5}

#ALIAS {^cspam$}
{
	#class {cspam} {read} {cspam.tin};
	#class {gameData} {open};
	#showme {Minion and battle spam reduced.}
}
{5}

#ALIAS {^nocspam$}
{
	#class {cspam} {kill};
	#showme {Minion and battle spam will no longer be modified.}
}
{5}

#ALIAS {^nopkmode$}
{
	#unvariable {pkMode};
	#showme {PK mode disabled.}
}
{5}

#ALIAS {^pkmode$}
{
	#variable {pkMode} {true};
	#showme {PK mode activated.}
}
{5}

#ALIAS {^{scro|scrol|scroll} %1}
{
	#variable {battleScroll} {%1};
	#showme {You can now use alt+backslash to use get the %1 from your container and use it.}
}
{5}

#ALIAS {^{t|th|thr|thro|throw} %1 %2}
{
	#variable {throwWeapon} {%1};
	#send {throw %1 %2;get %1}
}
{5}

#ALIAS {autorefresh}
{
	#variable {autorefresh} {true};
	#showme {You will automaticaly cast refresh spells if your MV is low.}
}
{5}

#ALIAS {autostore}
{
	#variable {autostore} {true};
	#showme {You will now put certain items in your container when you get them.}
}
{5}

#ALIAS {id %1}
{
	#if {"$identify" == "true"}
	{
		c identify %1
	};
	#else
	{
		#send {identify %1}
	}
}
{5}

#ALIAS {noautorefresh}
{
	#variable {autorefresh} {false};
	#showme {You will no longer automaticaly cast refresh spells.}
}
{5}

#ALIAS {noautostore}
{
	#unvariable {autostore};
	#showme {You will no longer autostore anything.}
}
{5}

#ALIAS {{muh|muha|muhah|muhaha|muhahah|muhahahaha}}
{
	#if {"$sex" == "female"}
	{
		emot is surrounded by flickering red flames as her eyes glow a demonic red and she levitates into the air. Poison tipped fangs sprout from her mouth as she issues a maniacal laugh, 'MUHAHAHAHAHAHAHAHA!'
	};
	#else
	{
		emot is surrounded by flickering red flames as his eyes glow a demonic red and he levitates into the air. Poison tipped fangs sprout from his mouth as he issues a maniacal laugh, 'MUHAHAHAHAHAHAHAHA!'
	}
}
{5}

#ALIAS {{p|pu|put} %1 %2}
{
	#variable {container} {%2};
	\put %1 %2
}
{5}

#ALIAS {{swi|swie|swiel|swield} %1}
{
	#variable {stabWeapon} {%1};
	#showme {You will now use the %1 for backstabs.}
}
{5}

#ALIAS {{wi|wie|wiel|wield} %1}
{
	#if {"%1" != "$stabWeapon"}
	{
		#variable {weapon} {%1}
	};
	\wield %1
}
{5}

#ALIAS {^hands %1}
{
	#if {"$burningHands" == "true"}
	{
		c burning hands %1
	};
	#if {"$shockingGrasp" == "true"}
	{
		c shocking grasp %1
	};
	#if {"$sacredTouch" == "true"}
	{
		c sacred touch %1
	};
	#if {"$sickeningTouch" == "true"}
	{
		c sickening touch %1
	}
}
{8}

#ALIAS {^strik %1}
{
	shadow strike %1
}
{8}

#ALIAS {^{ble|bles|bless} %1}
{
	#if {"$bless" == "true"}
	{
		c bless %1
	};
	#else
	{
		#showme {You do not have the spell bless yet.}
	}
}
{8}

#ALIAS {%.set$}
{
	eqset wear %1set
}
{9}

#ALIAS {Add_Direction %S}
{
	#if {"$pathing" == "true"}
	{
		#switch {"%1"}
		{
			#case {"down"}
			{
				#path {insert} {down} {up}
			};
			#case {"east"}
			{
				#path {insert} {east} {west}
			};
			#case {"north"}
			{
				#path {insert} {north} {south}
			};
			#case {"northeast"}
			{
				#path {insert} {northeast} {southwest}
			};
			#case {"northwest"}
			{
				#path {insert} {northwest} {southeast}
			};
			#case {"south"}
			{
				#path {insert} {south} {north}
			};
			#case {"southeast"}
			{
				#path {insert} {southeast} {northwest}
			};
			#case {"southwest"}
			{
				#path {insert} {southwest} {northeast}
			};
			#case {"up"}
			{
				#path {insert} {up} {down}
			};
			#case {"west"}
			{
				#path {insert} {west} {east}
			};
			#default
			{
				#path {insert} {enter %1} {enter %1}
			}
		}
	}
}
{9}

#ALIAS {^Clear_Variables$}
{
	#unvariable {autokill};
	#unvariable {currentExperience};
	#unvariable {currentHp};
	#unvariable {currentMana};
	#unvariable {currentMv};
	#unvariable {enemyConditionTone};
	#unvariable {exhausted};
	#unvariable {exits};
	#unvariable {expGained};
	#unvariable {friendNameEnter};
	#unvariable {greeting};
	#unvariable {groupExperience};
	#unvariable {groupLeader};
	#unvariable {hpRegenTime};
	#unvariable {justLeveled};
	#unvariable {lastReceivedExp};
	#unvariable {lastSpell};
	#unvariable {lostExp};
	#unvariable {maxHp};
	#unvariable {maxMana};
	#unvariable {maxMv};
	#unvariable {mnRegenTime};
	#unvariable {mvRegenTime};
	#unvariable {mobRepop};
	#unvariable {oldExp};
	#unvariable {playerSex};
	#unvariable {recast};
	#unvariable {refreshed};
	#unvariable {regenAlert};
	#unvariable {regenTime};
	#unvariable {pathing};
	#unvariable {pathName};
	#unvariable {pkMode};
	#unvariable {position};
	#unvariable {spell};
	#unvariable {waypoint}
}
{9}

#ALIAS {^autobrew$}
{
	noautojunk | prefix silent_;
	#variable {autobrew} {true};
	#showme {You will now automatically brew potions using items harvested from corpses.};
	#if {!&{brewContainer}}
	{
		#showme {Remember to set your brew container by typing brew in containername}
	}
}
{9}

#ALIAS {^autobuypractice$}
{
	#showme {You will now automatically spend experience to buy practices.};
	train | grep -i You can train to get a practice | prefix silent_;
	#variable {autobuypractice} {true}
}
{9}

#ALIAS {^autocspam$}
{
	#showme {autocspam enabled.};
	#variable {autocspam} {true}
}
{9}

#ALIAS {^autodream$}
{
	#variable {autodream} {true};
	#showme {Welcome to the world of dreams.}
}
{9}

#ALIAS {^autoheal$}
{
	#variable {autoheal} {true};
	#showme {Autoheal is now on.}
}
{9}

#ALIAS {^autohelp$}
{
	#variable {autohelp} {true};
	#showme {You will now see random help files when you sleep.}
}
{9}

#ALIAS {^autokill$}
{
	#variable {autokill} {true};
	#showme {Auttokill enabled.}
}
{9}

#ALIAS {^autolevel %i{all|cleric|mage|necromancer|thief|warrior}$}
{
	#script {autolevelClass} {echo "%1" | tr "[:upper:]" "[:lower:]" | awk '{print toupper(substr($0, 1, 1)) substr($0,2)}'};
	#variable {autolevelClass} {$autolevelClass[1]};
	#if {"$autolevelClass" != "All"}
	{
		#showme {You will now level $autolevelClass automatically.}
	};
	#else
	{
		#showme {You will now level all classes automatically}
	}
}
{9}

#ALIAS {^autolevel$}
{
	#if {"$autolevelClass" == "All"}
	{
		#showme {You are leveling your cheapest class automatically.}
	};
	#else
	{
		#showme {You are currently leveling $autolevelClass automatically.}
	}
}
{9}

#ALIAS {^automap$}
{
	#showme {Automap on.};
	#variable {automap} {true};
	#gag {^Map Scale -%*};
	#gag {^You are standing {in|on}%*}
}
{9}

#ALIAS {^autorecall$}
{
	#variable {autorecall} {true};
	#showme {You will automatically recall if you are in awful or pretty hurt.}
}
{9}

#ALIAS {^autoregen$}
{
	#variable {autoregen} {true};
	#showme {You will now regen when your group leader does.}
}
{9}

#ALIAS {^autothank$}
{
	#variable {autothank} {true};
	#showme {You will now thank people for newbie gifts automatically.}
}
{9}

#ALIAS {^beeps$}
{
	#showme {beeps on};
	#variable {beeps} {true}
}
{9}

#ALIAS {^bin %1}
{
	shadow bind %1
}
{9}

#ALIAS {^bin$}
{
	shadow bind
}
{9}

#ALIAS {^bind %1}
{
	shadow bind %1
}
{9}

#ALIAS {^bind$}
{
	shadow bind
}
{9}

#ALIAS {^brag groupexp$}
{
	exp | prefix silent_;
	#if {&{groupExperience}}
	{
		gt I have gained $groupExperience experience points in this group so far.
	};
	#else
	{
		#showme {Group experience is not being calculated at this time.}
	}
}
{9}

#ALIAS {^brew in %S$}
{
	#showme {Brew container set to %1.};
	#variable {brewContainer} {%1}
}
{9}

#ALIAS {^csave$}
{
	Clear_Variables;
	#class {gameData} {write} {$gameDataPath};
	#showme {saving game data for $name.}
}
{9}

#ALIAS {^fbrew %1}
{
	brew potion focus %1
}
{9}

#ALIAS {^get %S %S$}
{
	#if {"$palm" == "true" && "$inBattle" != "true" && "%1" != "all" && "$position" != "sleep"}
	{
		palm %1 %2
	};
	#else
	{
		#send {get %1 %2}
	}
}
{9}

#ALIAS {^get %S$}
{
	#if {"$palm" == "true" && "$inBattle" != "true" && "%1" != "all" && "$position" != "sleep"}
	{
		palm %1
	};
	#else
	{
		#send {get %1}
	}
}
{9}

#ALIAS {^getup$}
{
	\stand
}
{9}

#ALIAS {^groupexp$}
{
	exp | prefix silent_;
	#if {&{groupExperience}}
	{
		#showme {You have gained $groupExperience experience points in this group so far.}
	};
	#else
	{
		#showme {Group experience is not being calculated at this time.}
	}
}
{9}

#ALIAS {^hands$}
{
	#if {"$burningHands" == "true"}
	{
		c burning hands
	};
	#if {"$shockingGrasp" == "true"}
	{
		c shocking grasp
	};
	#if {"$sacredTouch" == "true"}
	{
		c sacred touch
	};
	#if {"$sickeningTouch" == "true"}
	{
		c sickening touch
	}
}
{9}

#ALIAS {^modkill %S$}
{
	#class {%1} {kill}
}
{9}

#ALIAS {^modload %S$}
{
	#class {%1} {read} {modules/%1.tin}
}
{9}

#ALIAS {^noautobrew$}
{
	#unvariable {autobrew};
	#showme {You will no longer brew potions.}
}
{9}

#ALIAS {^noautobuypractice$}
{
	#showme {You will no longer automatically buy practices.};
	#unvariable {autobuypractice}
}
{9}

#ALIAS {^noautocspam$}
{
	#showme {autocspam disabled.};
	#unvariable {autocspam}
}
{9}

#ALIAS {^noautodream$}
{
	#unvariable {autodream};
	#showme {As you decide to stop dreaming, you hear a snort and think you see the misty form of a nightmare vanishing into the distance.}
}
{9}

#ALIAS {^noautoheal$}
{
	#unvariable {autoheal};
	#showme {Autoheal is now off.}
}
{9}

#ALIAS {^noautohelp$}
{
	#unvariable {autohelp};
	#showme {You will no longer see random help files when you sleep.}
}
{9}

#ALIAS {^noautokill$}
{
	#unvariable {autokill};
	#showme {Auttokill disabled.}
}
{9}

#ALIAS {^noautolevel$}
{
	#showme {You will no longer automatically level anything.};
	#unvariable {autolevelClass}
}
{9}

#ALIAS {^noautomap$}
{
	#showme {Automap off.};
	#unvariable {automap};
	#ungag {^Map Scale -%*};
	#gag {^You are standing {in|on}%*}
}
{9}

#ALIAS {^noautorecall$}
{
	#unvariable {autorecall};
	#showme {You will no automatically recall.}
}
{9}

#ALIAS {^noautoregen$}
{
	#unvariable {autoregen};
	#showme {You will no longer automatically regen when your group leader does.}
}
{9}

#ALIAS {^noautothank$}
{
	#unvariable {autothank};
	#showme {You will no longer thank people for newbie gifts automatically.}
}
{9}

#ALIAS {^nobeeps$}
{
	#showme {beeps off};
	#unvariable {beeps}
}
{9}

#ALIAS {^nopath$}
{
	#if {"$pathing" == "true"}
	{
		#path {end};
		#path {save} {forward} {$pathName};
		#showme {Exported to the variable $pathName. To save changes immediately type csave.};
		#unvariable {pathing}
	};
	#else
	{
		#showme {You are not currently working on a path.}
	}
}
{9}

#ALIAS {^nopfile$}
{
	#unvariable {personalFile};
	#showme {personal file variable cleared.}
}
{9}

#ALIAS {^nospeech$}
{
	#unvariable {speech};
	#showme {speech disabled.}
}
{9}

#ALIAS {^path %S}
{
	#if {"$pathing" != "true"}
	{
		#showme {Recording path %1.};
		#path {new};
		#variable {pathName} {%1};
		#variable {pathing} {true}
	};
	#else
	{
		#showme {You are already working on a path. Use nopath to stop and save your current progress.}
	}
}
{9}

#ALIAS {^pathload %S}
{
	#if {&{%1}}
	{
		#path {load} {$%1};
		#variable {pathLoaded} {true}
	};
	#else
	{
		#showme {No path with the name "%1" found.}
	}
}
{9}

#ALIAS {^pathrun %S}
{
	#if {&{%1}}
	{
		#path {load} {$%1};
		#path {run} {0.5}
	};
	#else
	{
		#showme {No path with the name "%1" found.}
	}
}
{9}

#ALIAS {^pfile %1}
{
	#variable {personalFile} {%1};
	#class {personal} {read} {$personalFile};
	#showme {loading $personalFile}
}
{9}

#ALIAS {^regen$}
{
	eqset wear regen
}
{9}

#ALIAS {^repla%*}
{
	#send {%0 | prefix Replayin_}
}
{9}

#ALIAS {^repop %S}
{
	#if {"%1" == "clear" && &{mobRepop}}
	{
		#unvariable {mobRepop};
		#showme {You are no longer waiting for anything to repop.}
	};
	#else
	{
		#variable {mobRepop} {%1};
		#showme {Waiting for %1 to repop...}
	}
}
{9}

#ALIAS {^repop$}
{
	#if {&{mobRepop}}
	{
		#showme {You are waiting for $mobRepop to repop.}
	};
	#else
	{
		#showme {You are not currently waiting for anything to repop.}
	}
}
{9}

#ALIAS {^set{a|b|c|d|e|f|g|h|n|q|r|s|t|v|w|x|y|z} %2}
{
	#macro {\e%1} {%2};
	#showme {alt+%1 has been set to %2.}
}
{9}

#ALIAS {^set{a|b|c|d|e|f|g|h|n|q|r|s|t|v|w|x|y|z}$}
{
	#macro {\e%1}
}
{9}

#ALIAS {^speech$}
{
	#variable {speech} {true};
	#showme {speech enabled.}
}
{9}

#ALIAS {^strik$}
{
	shadow strike
}
{9}

#ALIAS {^strike %1}
{
	shadow strike %1
}
{9}

#ALIAS {^strike$}
{
	shadow strike
}
{9}

#ALIAS {^track %1}
{
	#variable {tracking} {%1};
	#showme {You are now tracking.}
}
{9}

#ALIAS {^track$}
{
	#unvariable {tracking};
	#showme {You are no longer tracking.}
}
{9}

#ALIAS {^unset %S}
{
	#if {"${%1}" == "true"}
	{
		#unvariable {%1};
		#showme {%1 unset}
	};
	#else
	{
		#showme {%1 not found.}
	}
}
{9}

#ALIAS {^vote$}
{
	#if {&{browser}}
	{
		#showme {Launching $browser...};
		#system {$browser 'http://www.mudconnect.com/cgi-bin/member/votelogin.cgi?mud=Alter+Aeon' &> /dev/null &}
	};
	#else
	{
		#showme {You do not have a browser command set, to do so please type browser followed by the browser command you would like to use,  E.G. browser firefox.}
	}
}
{9}

#ALIAS {^x$}
{
	#send {get coins corpse};
	#if {"$corpsecutter" == "true"}
	{
		harvest components corpse
	};
	#if {"$consume" == "true"}
	{
		control all consume corpse
	};
	#if {"$bloodSacrifice" == "true"}
	{
		bsac corpse
	};
	sac corpse
}
{9}

#ALIAS {^{aa|login}$}
{
	#if {!&{connected}}
	{
		#session {Alter Aeon} {alteraeon.com} {$mudPort};
		#if {&{name} && "$name" != "Name"}
		{
			$name;
			#if {&{password} && "$password" != "password"}
			{
				$password;
				#cr
			}
		}
	};
	#else
	{
		#showme {Huh?}
	}
}
{9}

#ALIAS {^{fam|fame}$}
{
	show fame
}
{9}

#ALIAS {^{loa|load}$}
{
	spells;
	#cr;
	#cr;
	#cr;
	#cr;
	whoami | grep -i tall.;
	skills;
	#cr;
	#cr;
	#cr;
	#cr;
	#cr;
	show stats | prefix silent_;
	show clev | prefix silent_
}
{9}

#ALIAS {^{pracs|practices}$}
{
	show practices
}
{9}

#ALIAS {^{quit|logoff}$}
{
	Clear_Variables;
	#class {gameData} {write} {$gameDataPath};
	set ctrigger off | prefix silent_;
	#send {quit}
}
{9}

#ALIAS {^{rest|si|sit}$}
{
	#variable {position} {rest};
	#send {rest};
	show regen | prefix silent_
}
{9}

#ALIAS {^{scan|sca} {d|do|dow|down}$}
{
	\scan | grep -i down
}
{9}

#ALIAS {^{scan|sca} {e|ea|eas|east}$}
{
	\scan | grep -i east
}
{9}

#ALIAS {^{scan|sca} {n|no|nor|north}$}
{
	\scan | grep -i north
}
{9}

#ALIAS {^{scan|sca} {s|so|sou|sout|south}$}
{
	\scan | grep -i south
}
{9}

#ALIAS {^{scan|sca} {u|up}$}
{
	\scan | grep -i up
}
{9}

#ALIAS {^{scan|sca} {w|we|wes|west}$}
{
	\scan | grep -i west
}
{9}

#ALIAS {^{sl|sle|slee|sleep}$}
{
	#variable {position} {sleep};
	#send {sleep};
	show regen | prefix silent_
}
{9}

#ALIAS {^{wa|wak|wake|stan|stand}$}
{
	#unvariable {position};
	#send {%0}
}
{9}

#ALIAS {b %1}
{
	#if {"$faerieFire" == "true"}
	{
		c faerie fire %1
	};
	#variable {victim} {%1};
	#if {&{weapon}}
	{
		remove $weapon
	};
	#if {&{eqshield}}
	{
		remove shield
	};
	wield $stabWeapon;
	#if {"$cloakOfDarkness" == "true"}
	{
		cloak on
	};
	#if {"$hide" == "true"}
	{
		hide
	};
	backstab %1;
	remove $stabWeapon;
	#if {&{weapon}}
	{
		wield $weapon
	};
	#if {&{eqshield}}
	{
		wear shield
	};
	#if {"$cloakOfDarkness" == "true"}
	{
		cloak off
	}
}
{9}

#ALIAS {browser %1}
{
	#variable {browser} {%1};
	#showme {OK, browser is now set to $browser.}
}
{9}

#ALIAS {cconf %1}
{
	#if {!&{%1}}
	{
		#showme {%1 false}
	};
	#else
	{
		#showme {%1 $%1}
	}
}
{9}

#ALIAS {g}
{
	#send {get all corpse}
}
{9}

#ALIAS {junk %1}
{
	drop %1;
	sac %1
}
{9}

#ALIAS {lic}
{
	look in corpse
}
{9}

#ALIAS {repeat %1}
{
	replay | grep -i %1
}
{9}

#ALIAS {rsoc %1}
{
	#script {echo "$($shuf -n 1 -e $socials) %1"}
}
{9}

#ALIAS {rsoc$}
{
	#script {$shuf -n 1 -e $socials}
}
{9}

#ALIAS {slay %1 %2}
{
	#variable {victim} {%1};
	#if {&{weapon}}
	{
		remove $weapon
	};
	#if {&{eqshield}}
	{
		remove shield
	};
	wield $stabWeapon;
	#if {"$cloakOfDarkness" == "true"}
	{
		cloak on
	};
	#if {&{stealthyMovement}}
	{
		sneak %2
	};
	#else
	{
		%2
	};
	backstab %1;
	remove $stabWeapon;
	#if {&{eqshield}}
	{
		wear shield
	};
	#if {&{weapon}}
	{
		wield $weapon
	};
	#if {"$cloakOfDarkness" == "true"}
	{
		cloak off
	}
}
{9}

#ALIAS {speechrate %1}
{
	#variable {speechrate} {%1};
	#showme {speech rate is now %1.}
}
{9}

#CONFIG           {256 COLORS}  {OFF}
#CONFIG           {AUTO TAB}  {5000}
#CONFIG           {BUFFER SIZE}  {20000}
#CONFIG           {CHARSET}  {ASCII}
#CONFIG           {COMMAND COLOR}  {<078>}
#CONFIG           {COMMAND ECHO}  {ON}
#CONFIG           {CONNECT RETRY}  {15}
#CONFIG           {HISTORY SIZE}  {1000}
#CONFIG           {LOG}  {PLAIN}
#CONFIG           {PACKET PATCH}  {0.01}
#CONFIG           {REPEAT CHAR}  {!}
#CONFIG           {REPEAT ENTER}  {ON}
#CONFIG           {SCROLL LOCK}  {ON}
#CONFIG           {SPEEDWALK}  {OFF}
#CONFIG           {TINTIN CHAR}  {#}
#CONFIG           {VERBATIM}  {OFF}
#CONFIG           {VERBATIM CHAR}  {\}
#CONFIG           {VERBOSE}  {OFF}
#CONFIG           {WORDWRAP}  {ON}
#EVENT {END OF PATH}
{
	#unvariable {pathLoaded}
}

#EVENT {PROGRAM START}
{
	#script {for i in modules/*.tin ; do echo "#class {$(basename "$i" .tin)} {read} {$i}";done};
	play intro;
	#echo {TinTin Alter Aeon:};
	#echo {By Storm Dragon and contributers. See the credits page for details:};
	#echo {https://github.com/stormdragon2976/tintin-alteraeon/wiki/Credits};
	#echo {-----------------------------------------------------------------------------------};
	#echo {Help is available in game on the cowsay channel or on the wiki:};
	#echo {https://github.com/stormdragon2976/tintin-alteraeon/wiki};
	#echo {-----------------------------------------------------------------------------------};
	#echo {To get started type login}
}

#EVENT {PROGRAM TERMINATION}
{
	#system {if [ -f ".backgroundMusicPID" ] ; then kill $(cat ".backgroundMusicPID");rm ".backgroundMusicPID" &> /dev/null;fi}
}

#EVENT {SESSION CONNECTED}
{
	#variable {connected} {true};
	#variable {loggedIn} {false};
	#script {logFilePath} {date +'log/%Y/%B/%d/'};
	#script {logFileName} {date +'%I_%M%p.log'};
	#system {mkdir -p ${logFilePath[1]}};
	#log {overwrite} {${logFilePath[1]}${logFileName[1]}}
}

#EVENT {SESSION DISCONNECTED}
{
	#unvariable {connected};
	stop_background_music
}

#GAG              {A ball of light flies idly in circles around your head.}
#GAG              {You don't see any of your group members here to split the gold with}
#GAG              {You don't see anything %1 in the corpse of %2}
#GAG              {You don't see anything by that name here.}
#GAG              {You have %1 mana of %2 Max.}
#GAG              {You see nothing in it for you to get.}
#GAG              {^!!SOUND%*}
#GAG              {^%S twitches and starts fidgeting.$}
#GAG              {^Replayin_Clantell replay$}
#GAG              {^Replayin_Recent channel history$}
#GAG              {^Replayin_Recent tells:$}
#GAG              {^Replayin_Sending activity for channel '%*}
#GAG              {^Sending activity for channel '%*}
#GAG              {^Stop doing what? You don't seem to be doing anything.$}
#GAG              {^The {corpse|gutted carcass} of%1is no longer suitable for blood sacrifice.$}
#GAG              {^You didn't find anything by that name.$}
#GAG              {^You don't see anything named 'coins' in the corpse of %1.$}
#GAG              {^You feel extremely jittery and awake.$}
#GAG              {^You find yourself unable to sit still, gotta keep moving...$}
#GAG              {^You haven't had a recent victory worth shouting about.$}
#GAG              {^You see nothing left to loot from the corpse of %1.$}
#GAG              {^mobrepop_%*}
#GAG              {^silent_%*}
#GAG              {^{A|An|The} %1 twitches and starts fidgeting.$}
#MACRO {\e\}
{
	get $battleScroll $container;
	use $battleScroll
}

#PATHDIR          {d}  {u}  {32}
#PATHDIR          {e}  {w}  {2}
#PATHDIR          {n}  {s}  {1}
#PATHDIR          {ne}  {sw}  {3}
#PATHDIR          {nw}  {se}  {9}
#PATHDIR          {s}  {n}  {4}
#PATHDIR          {se}  {nw}  {6}
#PATHDIR          {sw}  {ne}  {12}
#PATHDIR          {u}  {d}  {16}
#PATHDIR          {w}  {e}  {8}
#PROMPT           {<%dhp %dm %dmv %dac> %5 <%6>$}           {%0}  {1}
#PROMPT           {<%dhp %dm %dmv>}  {%0}  {1}
#PROMPT           {^HP%*}  {%0}  {1}
#SUBSTITUTE       {%*}  { %0}  {1}
#SUBSTITUTE       {^Replayin{_|_ }%2}  {%2}  {1}
#SUBSTITUTE       {MOV_REGEN}  {MOVE_REGEN}  {5}
#SUBSTITUTE       {^%S gives you 1 gold coins.$}          {%1 gives you 1 gold coin.}  {5}
#SUBSTITUTE       {^You are now wearing set '%S'.$}             {You are now wearing '%1'.}  {5}
#SUBSTITUTE       {tracking_[%1] }  {}  {5}
#VARIABLE         {lastHpAlert}  {}
#VARIABLE         {result}  {To get started type login}
#VARIABLE         {socials}  {"ack" "agree" "ahha" "angel" "apologize" "argh" "arr" "babble" "backslap" "bahumbug" "bap" "barf" "bark" "beam" "bear" "beckon" "beer" "beg" "bellyache" "bkiss" "blah" "blarg" "blink" "blog" "blonde" "blush" "boggle" "bonk" "boogie" "bop" "bored" "boss" "bounce" "bow" "brb" "brit" "burp" "button" "bye" "cackle" "caress" "cartwheel" "cheer" "chip" "chortle" "chuckle" "clap" "code" "coffee" "coinflip" "comfort" "confused" "cough" "cower" "cringe" "cry" "cube" "cuddle" "curl" "curse" "curtsy" "dance" "daydream" "devil" "discodance" "doh!" "drool" "drunk" "duck" "eegrin" "eemo" "egrin" "embrace" "eyebrow" "facepalm" "faint" "fandango" "fart" "flex" "flip" "flirt" "flush" "flutter" "fondle" "freak" "fremen" "french" "frown" "ftf" "gamlin" "gasp" "gauntlet" "giggle" "glare" "goat" "goddamnit" "gorilla" "goth" "grab" "greet" "grimace" "grin" "groan" "grope" "growl" "grumble" "grunt" "gurgle" "hack" "hair" "handshake" "hate" "headbang" "headlock" "heil" "hiccup" "highfive" "hiss" "hmm" "honk" "hop" "howl" "hrm" "hug" "huge" "hum" "hump" "hurf" "innocent" "insane" "island" "jedi" "jello" "jigg" "kanook" "kiss" "kneel" "lag" "lalala" "laugh" "laundry" "lick" "make" "meow" "miss" "mmk" "mml" "moan" "mole" "moon" "mooo" "mutter" "nanook" "nerd" "nibble" "ninethousand" "nod" "noodle" "nowthan" "nudge" "nuzzle" "ogg" "orly" "oz" "pace" "pancake" "pant" "pat" "patriot" "peck" "peer" "pervert" "pet" "pie" "pimp" "pinch" "pointat" "poke" "ponder" "pounce" "pout" "powertrip" "prance" "preach" "propose" "protectinate" "puke" "punt" "purr" "putter" "raa" "raindance" "ranko" "raspberry" "ready" "redneck" "ribble" "rice" "rofl" "roll" "rose" "ruffle" "rutroh" "salute" "sbomb" "scoff" "scold" "scowl" "scratch" "scream" "scuffle" "scuttle" "seppuku" "shag" "shake" "shame" "shhh" "shi" "ver" "shoo" "shrug" "shudder" "shun" "sigh" "sing" "sith" "skip" "slam" "slap" "smack" "smile" "smirk" "smoke" "smooch" "snap" "snarl" "sneer" "sneeze" "snicker" "sniff" "snifle" "snod" "snore" "snort" "snowball" "snuggle" "spammm" "spank" "spin" "spit" "spock" "squat" "ssnod" "stalk" "stare" "steam" "stefen" "stomp" "stoned" "stretch" "strip" "strut" "suicide" "suspect" "tackle" "tapp" "thank" "threaten" "tickles" "tmi" "torture" "tweak" "twiddle" "twirl" "twitch" "uh" "valley" "vegetate" "view" "violin" "waffles" "wave" "wedgie" "whap" "whimper" "whine" "whistle" "whittle" "wibble" "wiggle" "willy" "wince" "wink" "worship" "wrestle" "wrinkle" "wrist" "wtf" "xxp" "yawn" "zerbert"}
